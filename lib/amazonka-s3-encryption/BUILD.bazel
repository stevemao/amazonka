load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/amazonka-s3-encryption/amazonka-s3-encryption.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-s3-encryption",
    srcs = [
        "src/Amazonka/S3/Encryption.hs",
        "src/Amazonka/S3/Encryption/Body.hs",
        "src/Amazonka/S3/Encryption/Decrypt.hs",
        "src/Amazonka/S3/Encryption/Encrypt.hs",
        "src/Amazonka/S3/Encryption/Envelope.hs",
        "src/Amazonka/S3/Encryption/Instructions.hs",
        "src/Amazonka/S3/Encryption/Types.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_s3_encryption=\"2.0\"",
        "-XNoImplicitPrelude",
        "-XDataKinds",
        "-XDeriveAnyClass",
        "-XDeriveFoldable",
        "-XDeriveFunctor",
        "-XDeriveGeneric",
        "-XDeriveTraversable",
        "-XDerivingStrategies",
        "-XDerivingVia",
        "-XFlexibleContexts",
        "-XFlexibleInstances",
        "-XGeneralizedNewtypeDeriving",
        "-XLambdaCase",
        "-XNamedFieldPuns",
        "-XOverloadedStrings",
        "-XPatternSynonyms",
        "-XRankNTypes",
        "-XRecordWildCards",
        "-XScopedTypeVariables",
        "-XStrictData",
        "-XTupleSections",
        "-XTypeApplications",
        "-XTypeFamilies",
        "-XViewPatterns",
        "-Wall",
        "-funbox-strict-fields",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-fwarn-missing-deriving-strategies",
        "-fwarn-unused-packages",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka",
        "//lib/amazonka-core",
        "//lib/services/amazonka-kms",
        "//lib/services/amazonka-s3",
        "@stackage//:aeson",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:conduit",
        "@stackage//:cryptonite",
        "@stackage//:http-client",
        "@stackage//:lens",
        "@stackage//:memory",
        "@stackage//:mtl",
        "@stackage//:resourcet",
        "@stackage//:text",
        "@stackage//:unordered-containers",
    ],
)

# rule generated from lib/amazonka-s3-encryption/amazonka-s3-encryption.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-s3-encryption-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/S3/Encryption/Envelope.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_s3_encryption=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-s3-encryption",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:QuickCheck",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:conduit",
        "@stackage//:cryptonite",
        "@stackage//:mtl",
        "@stackage//:quickcheck-instances",
        "@stackage//:resourcet",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:tasty-quickcheck",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
