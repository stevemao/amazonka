load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-elb/amazonka-elb.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-elb",
    srcs = [
        "gen/Amazonka/ELB.hs",
        "gen/Amazonka/ELB/AddTags.hs",
        "gen/Amazonka/ELB/ApplySecurityGroupsToLoadBalancer.hs",
        "gen/Amazonka/ELB/AttachLoadBalancerToSubnets.hs",
        "gen/Amazonka/ELB/ConfigureHealthCheck.hs",
        "gen/Amazonka/ELB/CreateAppCookieStickinessPolicy.hs",
        "gen/Amazonka/ELB/CreateLBCookieStickinessPolicy.hs",
        "gen/Amazonka/ELB/CreateLoadBalancer.hs",
        "gen/Amazonka/ELB/CreateLoadBalancerListeners.hs",
        "gen/Amazonka/ELB/CreateLoadBalancerPolicy.hs",
        "gen/Amazonka/ELB/DeleteLoadBalancer.hs",
        "gen/Amazonka/ELB/DeleteLoadBalancerListeners.hs",
        "gen/Amazonka/ELB/DeleteLoadBalancerPolicy.hs",
        "gen/Amazonka/ELB/DeregisterInstancesFromLoadBalancer.hs",
        "gen/Amazonka/ELB/DescribeAccountLimits.hs",
        "gen/Amazonka/ELB/DescribeInstanceHealth.hs",
        "gen/Amazonka/ELB/DescribeLoadBalancerAttributes.hs",
        "gen/Amazonka/ELB/DescribeLoadBalancerPolicies.hs",
        "gen/Amazonka/ELB/DescribeLoadBalancerPolicyTypes.hs",
        "gen/Amazonka/ELB/DescribeLoadBalancers.hs",
        "gen/Amazonka/ELB/DescribeTags.hs",
        "gen/Amazonka/ELB/DetachLoadBalancerFromSubnets.hs",
        "gen/Amazonka/ELB/DisableAvailabilityZonesForLoadBalancer.hs",
        "gen/Amazonka/ELB/EnableAvailabilityZonesForLoadBalancer.hs",
        "gen/Amazonka/ELB/Lens.hs",
        "gen/Amazonka/ELB/ModifyLoadBalancerAttributes.hs",
        "gen/Amazonka/ELB/RegisterInstancesWithLoadBalancer.hs",
        "gen/Amazonka/ELB/RemoveTags.hs",
        "gen/Amazonka/ELB/SetLoadBalancerListenerSSLCertificate.hs",
        "gen/Amazonka/ELB/SetLoadBalancerPoliciesForBackendServer.hs",
        "gen/Amazonka/ELB/SetLoadBalancerPoliciesOfListener.hs",
        "gen/Amazonka/ELB/Types.hs",
        "gen/Amazonka/ELB/Types/AccessLog.hs",
        "gen/Amazonka/ELB/Types/AdditionalAttribute.hs",
        "gen/Amazonka/ELB/Types/AppCookieStickinessPolicy.hs",
        "gen/Amazonka/ELB/Types/BackendServerDescription.hs",
        "gen/Amazonka/ELB/Types/ConnectionDraining.hs",
        "gen/Amazonka/ELB/Types/ConnectionSettings.hs",
        "gen/Amazonka/ELB/Types/CrossZoneLoadBalancing.hs",
        "gen/Amazonka/ELB/Types/HealthCheck.hs",
        "gen/Amazonka/ELB/Types/Instance.hs",
        "gen/Amazonka/ELB/Types/InstanceState.hs",
        "gen/Amazonka/ELB/Types/LBCookieStickinessPolicy.hs",
        "gen/Amazonka/ELB/Types/Limit.hs",
        "gen/Amazonka/ELB/Types/Listener.hs",
        "gen/Amazonka/ELB/Types/ListenerDescription.hs",
        "gen/Amazonka/ELB/Types/LoadBalancerAttributes.hs",
        "gen/Amazonka/ELB/Types/LoadBalancerDescription.hs",
        "gen/Amazonka/ELB/Types/Policies.hs",
        "gen/Amazonka/ELB/Types/PolicyAttribute.hs",
        "gen/Amazonka/ELB/Types/PolicyAttributeDescription.hs",
        "gen/Amazonka/ELB/Types/PolicyAttributeTypeDescription.hs",
        "gen/Amazonka/ELB/Types/PolicyDescription.hs",
        "gen/Amazonka/ELB/Types/PolicyTypeDescription.hs",
        "gen/Amazonka/ELB/Types/SourceSecurityGroup.hs",
        "gen/Amazonka/ELB/Types/Tag.hs",
        "gen/Amazonka/ELB/Types/TagDescription.hs",
        "gen/Amazonka/ELB/Types/TagKeyOnly.hs",
        "gen/Amazonka/ELB/Waiters.hs",
        "src/Amazonka/ELB/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_elb=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-elb/amazonka-elb.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-elb-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/ELB.hs",
        "test/Test/Amazonka/ELB/Internal.hs",
        "test/Test/Amazonka/Gen/ELB.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_elb=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-elb",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
