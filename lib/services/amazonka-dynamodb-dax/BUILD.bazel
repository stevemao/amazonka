load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-dynamodb-dax/amazonka-dynamodb-dax.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-dynamodb-dax",
    srcs = [
        "gen/Amazonka/DAX.hs",
        "gen/Amazonka/DAX/CreateCluster.hs",
        "gen/Amazonka/DAX/CreateParameterGroup.hs",
        "gen/Amazonka/DAX/CreateSubnetGroup.hs",
        "gen/Amazonka/DAX/DecreaseReplicationFactor.hs",
        "gen/Amazonka/DAX/DeleteCluster.hs",
        "gen/Amazonka/DAX/DeleteParameterGroup.hs",
        "gen/Amazonka/DAX/DeleteSubnetGroup.hs",
        "gen/Amazonka/DAX/DescribeClusters.hs",
        "gen/Amazonka/DAX/DescribeDefaultParameters.hs",
        "gen/Amazonka/DAX/DescribeEvents.hs",
        "gen/Amazonka/DAX/DescribeParameterGroups.hs",
        "gen/Amazonka/DAX/DescribeParameters.hs",
        "gen/Amazonka/DAX/DescribeSubnetGroups.hs",
        "gen/Amazonka/DAX/IncreaseReplicationFactor.hs",
        "gen/Amazonka/DAX/Lens.hs",
        "gen/Amazonka/DAX/ListTags.hs",
        "gen/Amazonka/DAX/RebootNode.hs",
        "gen/Amazonka/DAX/TagResource.hs",
        "gen/Amazonka/DAX/Types.hs",
        "gen/Amazonka/DAX/Types/ChangeType.hs",
        "gen/Amazonka/DAX/Types/Cluster.hs",
        "gen/Amazonka/DAX/Types/ClusterEndpointEncryptionType.hs",
        "gen/Amazonka/DAX/Types/Endpoint.hs",
        "gen/Amazonka/DAX/Types/Event.hs",
        "gen/Amazonka/DAX/Types/IsModifiable.hs",
        "gen/Amazonka/DAX/Types/Node.hs",
        "gen/Amazonka/DAX/Types/NodeTypeSpecificValue.hs",
        "gen/Amazonka/DAX/Types/NotificationConfiguration.hs",
        "gen/Amazonka/DAX/Types/Parameter.hs",
        "gen/Amazonka/DAX/Types/ParameterGroup.hs",
        "gen/Amazonka/DAX/Types/ParameterGroupStatus.hs",
        "gen/Amazonka/DAX/Types/ParameterNameValue.hs",
        "gen/Amazonka/DAX/Types/ParameterType.hs",
        "gen/Amazonka/DAX/Types/SSEDescription.hs",
        "gen/Amazonka/DAX/Types/SSESpecification.hs",
        "gen/Amazonka/DAX/Types/SSEStatus.hs",
        "gen/Amazonka/DAX/Types/SecurityGroupMembership.hs",
        "gen/Amazonka/DAX/Types/SourceType.hs",
        "gen/Amazonka/DAX/Types/Subnet.hs",
        "gen/Amazonka/DAX/Types/SubnetGroup.hs",
        "gen/Amazonka/DAX/Types/Tag.hs",
        "gen/Amazonka/DAX/UntagResource.hs",
        "gen/Amazonka/DAX/UpdateCluster.hs",
        "gen/Amazonka/DAX/UpdateParameterGroup.hs",
        "gen/Amazonka/DAX/UpdateSubnetGroup.hs",
        "gen/Amazonka/DAX/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_dynamodb_dax=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-dynamodb-dax/amazonka-dynamodb-dax.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-dynamodb-dax-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/DAX.hs",
        "test/Test/Amazonka/DAX/Internal.hs",
        "test/Test/Amazonka/Gen/DAX.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_dynamodb_dax=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-dynamodb-dax",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
