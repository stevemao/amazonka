load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-route53resolver/amazonka-route53resolver.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-route53resolver",
    srcs = [
        "gen/Amazonka/Route53Resolver.hs",
        "gen/Amazonka/Route53Resolver/AssociateFirewallRuleGroup.hs",
        "gen/Amazonka/Route53Resolver/AssociateResolverEndpointIpAddress.hs",
        "gen/Amazonka/Route53Resolver/AssociateResolverQueryLogConfig.hs",
        "gen/Amazonka/Route53Resolver/AssociateResolverRule.hs",
        "gen/Amazonka/Route53Resolver/CreateFirewallDomainList.hs",
        "gen/Amazonka/Route53Resolver/CreateFirewallRule.hs",
        "gen/Amazonka/Route53Resolver/CreateFirewallRuleGroup.hs",
        "gen/Amazonka/Route53Resolver/CreateResolverEndpoint.hs",
        "gen/Amazonka/Route53Resolver/CreateResolverQueryLogConfig.hs",
        "gen/Amazonka/Route53Resolver/CreateResolverRule.hs",
        "gen/Amazonka/Route53Resolver/DeleteFirewallDomainList.hs",
        "gen/Amazonka/Route53Resolver/DeleteFirewallRule.hs",
        "gen/Amazonka/Route53Resolver/DeleteFirewallRuleGroup.hs",
        "gen/Amazonka/Route53Resolver/DeleteResolverEndpoint.hs",
        "gen/Amazonka/Route53Resolver/DeleteResolverQueryLogConfig.hs",
        "gen/Amazonka/Route53Resolver/DeleteResolverRule.hs",
        "gen/Amazonka/Route53Resolver/DisassociateFirewallRuleGroup.hs",
        "gen/Amazonka/Route53Resolver/DisassociateResolverEndpointIpAddress.hs",
        "gen/Amazonka/Route53Resolver/DisassociateResolverQueryLogConfig.hs",
        "gen/Amazonka/Route53Resolver/DisassociateResolverRule.hs",
        "gen/Amazonka/Route53Resolver/GetFirewallConfig.hs",
        "gen/Amazonka/Route53Resolver/GetFirewallDomainList.hs",
        "gen/Amazonka/Route53Resolver/GetFirewallRuleGroup.hs",
        "gen/Amazonka/Route53Resolver/GetFirewallRuleGroupAssociation.hs",
        "gen/Amazonka/Route53Resolver/GetFirewallRuleGroupPolicy.hs",
        "gen/Amazonka/Route53Resolver/GetResolverConfig.hs",
        "gen/Amazonka/Route53Resolver/GetResolverDnssecConfig.hs",
        "gen/Amazonka/Route53Resolver/GetResolverEndpoint.hs",
        "gen/Amazonka/Route53Resolver/GetResolverQueryLogConfig.hs",
        "gen/Amazonka/Route53Resolver/GetResolverQueryLogConfigAssociation.hs",
        "gen/Amazonka/Route53Resolver/GetResolverQueryLogConfigPolicy.hs",
        "gen/Amazonka/Route53Resolver/GetResolverRule.hs",
        "gen/Amazonka/Route53Resolver/GetResolverRuleAssociation.hs",
        "gen/Amazonka/Route53Resolver/GetResolverRulePolicy.hs",
        "gen/Amazonka/Route53Resolver/ImportFirewallDomains.hs",
        "gen/Amazonka/Route53Resolver/Lens.hs",
        "gen/Amazonka/Route53Resolver/ListFirewallConfigs.hs",
        "gen/Amazonka/Route53Resolver/ListFirewallDomainLists.hs",
        "gen/Amazonka/Route53Resolver/ListFirewallDomains.hs",
        "gen/Amazonka/Route53Resolver/ListFirewallRuleGroupAssociations.hs",
        "gen/Amazonka/Route53Resolver/ListFirewallRuleGroups.hs",
        "gen/Amazonka/Route53Resolver/ListFirewallRules.hs",
        "gen/Amazonka/Route53Resolver/ListResolverConfigs.hs",
        "gen/Amazonka/Route53Resolver/ListResolverDnssecConfigs.hs",
        "gen/Amazonka/Route53Resolver/ListResolverEndpointIpAddresses.hs",
        "gen/Amazonka/Route53Resolver/ListResolverEndpoints.hs",
        "gen/Amazonka/Route53Resolver/ListResolverQueryLogConfigAssociations.hs",
        "gen/Amazonka/Route53Resolver/ListResolverQueryLogConfigs.hs",
        "gen/Amazonka/Route53Resolver/ListResolverRuleAssociations.hs",
        "gen/Amazonka/Route53Resolver/ListResolverRules.hs",
        "gen/Amazonka/Route53Resolver/ListTagsForResource.hs",
        "gen/Amazonka/Route53Resolver/PutFirewallRuleGroupPolicy.hs",
        "gen/Amazonka/Route53Resolver/PutResolverQueryLogConfigPolicy.hs",
        "gen/Amazonka/Route53Resolver/PutResolverRulePolicy.hs",
        "gen/Amazonka/Route53Resolver/TagResource.hs",
        "gen/Amazonka/Route53Resolver/Types.hs",
        "gen/Amazonka/Route53Resolver/Types/Action.hs",
        "gen/Amazonka/Route53Resolver/Types/AutodefinedReverseFlag.hs",
        "gen/Amazonka/Route53Resolver/Types/BlockOverrideDnsType.hs",
        "gen/Amazonka/Route53Resolver/Types/BlockResponse.hs",
        "gen/Amazonka/Route53Resolver/Types/Filter.hs",
        "gen/Amazonka/Route53Resolver/Types/FirewallConfig.hs",
        "gen/Amazonka/Route53Resolver/Types/FirewallDomainImportOperation.hs",
        "gen/Amazonka/Route53Resolver/Types/FirewallDomainList.hs",
        "gen/Amazonka/Route53Resolver/Types/FirewallDomainListMetadata.hs",
        "gen/Amazonka/Route53Resolver/Types/FirewallDomainListStatus.hs",
        "gen/Amazonka/Route53Resolver/Types/FirewallDomainUpdateOperation.hs",
        "gen/Amazonka/Route53Resolver/Types/FirewallFailOpenStatus.hs",
        "gen/Amazonka/Route53Resolver/Types/FirewallRule.hs",
        "gen/Amazonka/Route53Resolver/Types/FirewallRuleGroup.hs",
        "gen/Amazonka/Route53Resolver/Types/FirewallRuleGroupAssociation.hs",
        "gen/Amazonka/Route53Resolver/Types/FirewallRuleGroupAssociationStatus.hs",
        "gen/Amazonka/Route53Resolver/Types/FirewallRuleGroupMetadata.hs",
        "gen/Amazonka/Route53Resolver/Types/FirewallRuleGroupStatus.hs",
        "gen/Amazonka/Route53Resolver/Types/IpAddressRequest.hs",
        "gen/Amazonka/Route53Resolver/Types/IpAddressResponse.hs",
        "gen/Amazonka/Route53Resolver/Types/IpAddressStatus.hs",
        "gen/Amazonka/Route53Resolver/Types/IpAddressUpdate.hs",
        "gen/Amazonka/Route53Resolver/Types/MutationProtectionStatus.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverAutodefinedReverseStatus.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverConfig.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverDNSSECValidationStatus.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverDnssecConfig.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverEndpoint.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverEndpointDirection.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverEndpointStatus.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverQueryLogConfig.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverQueryLogConfigAssociation.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverQueryLogConfigAssociationError.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverQueryLogConfigAssociationStatus.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverQueryLogConfigStatus.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverRule.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverRuleAssociation.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverRuleAssociationStatus.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverRuleConfig.hs",
        "gen/Amazonka/Route53Resolver/Types/ResolverRuleStatus.hs",
        "gen/Amazonka/Route53Resolver/Types/RuleTypeOption.hs",
        "gen/Amazonka/Route53Resolver/Types/ShareStatus.hs",
        "gen/Amazonka/Route53Resolver/Types/SortOrder.hs",
        "gen/Amazonka/Route53Resolver/Types/Tag.hs",
        "gen/Amazonka/Route53Resolver/Types/TargetAddress.hs",
        "gen/Amazonka/Route53Resolver/Types/Validation.hs",
        "gen/Amazonka/Route53Resolver/UntagResource.hs",
        "gen/Amazonka/Route53Resolver/UpdateFirewallConfig.hs",
        "gen/Amazonka/Route53Resolver/UpdateFirewallDomains.hs",
        "gen/Amazonka/Route53Resolver/UpdateFirewallRule.hs",
        "gen/Amazonka/Route53Resolver/UpdateFirewallRuleGroupAssociation.hs",
        "gen/Amazonka/Route53Resolver/UpdateResolverConfig.hs",
        "gen/Amazonka/Route53Resolver/UpdateResolverDnssecConfig.hs",
        "gen/Amazonka/Route53Resolver/UpdateResolverEndpoint.hs",
        "gen/Amazonka/Route53Resolver/UpdateResolverRule.hs",
        "gen/Amazonka/Route53Resolver/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_route53resolver=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-route53resolver/amazonka-route53resolver.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-route53resolver-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/Route53Resolver.hs",
        "test/Test/Amazonka/Route53Resolver.hs",
        "test/Test/Amazonka/Route53Resolver/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_route53resolver=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-route53resolver",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
