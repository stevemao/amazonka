load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-scheduler/amazonka-scheduler.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-scheduler",
    srcs = [
        "gen/Amazonka/Scheduler.hs",
        "gen/Amazonka/Scheduler/CreateSchedule.hs",
        "gen/Amazonka/Scheduler/CreateScheduleGroup.hs",
        "gen/Amazonka/Scheduler/DeleteSchedule.hs",
        "gen/Amazonka/Scheduler/DeleteScheduleGroup.hs",
        "gen/Amazonka/Scheduler/GetSchedule.hs",
        "gen/Amazonka/Scheduler/GetScheduleGroup.hs",
        "gen/Amazonka/Scheduler/Lens.hs",
        "gen/Amazonka/Scheduler/ListScheduleGroups.hs",
        "gen/Amazonka/Scheduler/ListSchedules.hs",
        "gen/Amazonka/Scheduler/ListTagsForResource.hs",
        "gen/Amazonka/Scheduler/TagResource.hs",
        "gen/Amazonka/Scheduler/Types.hs",
        "gen/Amazonka/Scheduler/Types/AssignPublicIp.hs",
        "gen/Amazonka/Scheduler/Types/AwsVpcConfiguration.hs",
        "gen/Amazonka/Scheduler/Types/CapacityProviderStrategyItem.hs",
        "gen/Amazonka/Scheduler/Types/DeadLetterConfig.hs",
        "gen/Amazonka/Scheduler/Types/EcsParameters.hs",
        "gen/Amazonka/Scheduler/Types/EventBridgeParameters.hs",
        "gen/Amazonka/Scheduler/Types/FlexibleTimeWindow.hs",
        "gen/Amazonka/Scheduler/Types/FlexibleTimeWindowMode.hs",
        "gen/Amazonka/Scheduler/Types/KinesisParameters.hs",
        "gen/Amazonka/Scheduler/Types/LaunchType.hs",
        "gen/Amazonka/Scheduler/Types/NetworkConfiguration.hs",
        "gen/Amazonka/Scheduler/Types/PlacementConstraint.hs",
        "gen/Amazonka/Scheduler/Types/PlacementConstraintType.hs",
        "gen/Amazonka/Scheduler/Types/PlacementStrategy.hs",
        "gen/Amazonka/Scheduler/Types/PlacementStrategyType.hs",
        "gen/Amazonka/Scheduler/Types/PropagateTags.hs",
        "gen/Amazonka/Scheduler/Types/RetryPolicy.hs",
        "gen/Amazonka/Scheduler/Types/SageMakerPipelineParameter.hs",
        "gen/Amazonka/Scheduler/Types/SageMakerPipelineParameters.hs",
        "gen/Amazonka/Scheduler/Types/ScheduleGroupState.hs",
        "gen/Amazonka/Scheduler/Types/ScheduleGroupSummary.hs",
        "gen/Amazonka/Scheduler/Types/ScheduleState.hs",
        "gen/Amazonka/Scheduler/Types/ScheduleSummary.hs",
        "gen/Amazonka/Scheduler/Types/SqsParameters.hs",
        "gen/Amazonka/Scheduler/Types/Tag.hs",
        "gen/Amazonka/Scheduler/Types/Target.hs",
        "gen/Amazonka/Scheduler/Types/TargetSummary.hs",
        "gen/Amazonka/Scheduler/UntagResource.hs",
        "gen/Amazonka/Scheduler/UpdateSchedule.hs",
        "gen/Amazonka/Scheduler/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_scheduler=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-scheduler/amazonka-scheduler.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-scheduler-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/Scheduler.hs",
        "test/Test/Amazonka/Scheduler.hs",
        "test/Test/Amazonka/Scheduler/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_scheduler=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-scheduler",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
