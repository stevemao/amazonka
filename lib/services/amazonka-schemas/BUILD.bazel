load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-schemas/amazonka-schemas.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-schemas",
    srcs = [
        "gen/Amazonka/Schemas.hs",
        "gen/Amazonka/Schemas/CreateDiscoverer.hs",
        "gen/Amazonka/Schemas/CreateRegistry.hs",
        "gen/Amazonka/Schemas/CreateSchema.hs",
        "gen/Amazonka/Schemas/DeleteDiscoverer.hs",
        "gen/Amazonka/Schemas/DeleteRegistry.hs",
        "gen/Amazonka/Schemas/DeleteResourcePolicy.hs",
        "gen/Amazonka/Schemas/DeleteSchema.hs",
        "gen/Amazonka/Schemas/DeleteSchemaVersion.hs",
        "gen/Amazonka/Schemas/DescribeCodeBinding.hs",
        "gen/Amazonka/Schemas/DescribeDiscoverer.hs",
        "gen/Amazonka/Schemas/DescribeRegistry.hs",
        "gen/Amazonka/Schemas/DescribeSchema.hs",
        "gen/Amazonka/Schemas/ExportSchema.hs",
        "gen/Amazonka/Schemas/GetCodeBindingSource.hs",
        "gen/Amazonka/Schemas/GetDiscoveredSchema.hs",
        "gen/Amazonka/Schemas/GetResourcePolicy.hs",
        "gen/Amazonka/Schemas/Lens.hs",
        "gen/Amazonka/Schemas/ListDiscoverers.hs",
        "gen/Amazonka/Schemas/ListRegistries.hs",
        "gen/Amazonka/Schemas/ListSchemaVersions.hs",
        "gen/Amazonka/Schemas/ListSchemas.hs",
        "gen/Amazonka/Schemas/ListTagsForResource.hs",
        "gen/Amazonka/Schemas/PutCodeBinding.hs",
        "gen/Amazonka/Schemas/PutResourcePolicy.hs",
        "gen/Amazonka/Schemas/SearchSchemas.hs",
        "gen/Amazonka/Schemas/StartDiscoverer.hs",
        "gen/Amazonka/Schemas/StopDiscoverer.hs",
        "gen/Amazonka/Schemas/TagResource.hs",
        "gen/Amazonka/Schemas/Types.hs",
        "gen/Amazonka/Schemas/Types/CodeGenerationStatus.hs",
        "gen/Amazonka/Schemas/Types/DiscovererState.hs",
        "gen/Amazonka/Schemas/Types/DiscovererSummary.hs",
        "gen/Amazonka/Schemas/Types/RegistrySummary.hs",
        "gen/Amazonka/Schemas/Types/SchemaSummary.hs",
        "gen/Amazonka/Schemas/Types/SchemaVersionSummary.hs",
        "gen/Amazonka/Schemas/Types/SearchSchemaSummary.hs",
        "gen/Amazonka/Schemas/Types/SearchSchemaVersionSummary.hs",
        "gen/Amazonka/Schemas/Types/Type.hs",
        "gen/Amazonka/Schemas/UntagResource.hs",
        "gen/Amazonka/Schemas/UpdateDiscoverer.hs",
        "gen/Amazonka/Schemas/UpdateRegistry.hs",
        "gen/Amazonka/Schemas/UpdateSchema.hs",
        "gen/Amazonka/Schemas/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_schemas=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-schemas/amazonka-schemas.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-schemas-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/Schemas.hs",
        "test/Test/Amazonka/Schemas.hs",
        "test/Test/Amazonka/Schemas/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_schemas=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-schemas",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
