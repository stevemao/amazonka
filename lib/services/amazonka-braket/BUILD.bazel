load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-braket/amazonka-braket.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-braket",
    srcs = [
        "gen/Amazonka/Braket.hs",
        "gen/Amazonka/Braket/CancelJob.hs",
        "gen/Amazonka/Braket/CancelQuantumTask.hs",
        "gen/Amazonka/Braket/CreateJob.hs",
        "gen/Amazonka/Braket/CreateQuantumTask.hs",
        "gen/Amazonka/Braket/GetDevice.hs",
        "gen/Amazonka/Braket/GetJob.hs",
        "gen/Amazonka/Braket/GetQuantumTask.hs",
        "gen/Amazonka/Braket/Lens.hs",
        "gen/Amazonka/Braket/ListTagsForResource.hs",
        "gen/Amazonka/Braket/SearchDevices.hs",
        "gen/Amazonka/Braket/SearchJobs.hs",
        "gen/Amazonka/Braket/SearchQuantumTasks.hs",
        "gen/Amazonka/Braket/TagResource.hs",
        "gen/Amazonka/Braket/Types.hs",
        "gen/Amazonka/Braket/Types/AlgorithmSpecification.hs",
        "gen/Amazonka/Braket/Types/CancellationStatus.hs",
        "gen/Amazonka/Braket/Types/CompressionType.hs",
        "gen/Amazonka/Braket/Types/ContainerImage.hs",
        "gen/Amazonka/Braket/Types/DataSource.hs",
        "gen/Amazonka/Braket/Types/DeviceConfig.hs",
        "gen/Amazonka/Braket/Types/DeviceStatus.hs",
        "gen/Amazonka/Braket/Types/DeviceSummary.hs",
        "gen/Amazonka/Braket/Types/DeviceType.hs",
        "gen/Amazonka/Braket/Types/InputFileConfig.hs",
        "gen/Amazonka/Braket/Types/InstanceConfig.hs",
        "gen/Amazonka/Braket/Types/InstanceType.hs",
        "gen/Amazonka/Braket/Types/JobCheckpointConfig.hs",
        "gen/Amazonka/Braket/Types/JobEventDetails.hs",
        "gen/Amazonka/Braket/Types/JobEventType.hs",
        "gen/Amazonka/Braket/Types/JobOutputDataConfig.hs",
        "gen/Amazonka/Braket/Types/JobPrimaryStatus.hs",
        "gen/Amazonka/Braket/Types/JobStoppingCondition.hs",
        "gen/Amazonka/Braket/Types/JobSummary.hs",
        "gen/Amazonka/Braket/Types/QuantumTaskStatus.hs",
        "gen/Amazonka/Braket/Types/QuantumTaskSummary.hs",
        "gen/Amazonka/Braket/Types/S3DataSource.hs",
        "gen/Amazonka/Braket/Types/ScriptModeConfig.hs",
        "gen/Amazonka/Braket/Types/SearchDevicesFilter.hs",
        "gen/Amazonka/Braket/Types/SearchJobsFilter.hs",
        "gen/Amazonka/Braket/Types/SearchJobsFilterOperator.hs",
        "gen/Amazonka/Braket/Types/SearchQuantumTasksFilter.hs",
        "gen/Amazonka/Braket/Types/SearchQuantumTasksFilterOperator.hs",
        "gen/Amazonka/Braket/UntagResource.hs",
        "gen/Amazonka/Braket/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_braket=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-braket/amazonka-braket.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-braket-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Braket.hs",
        "test/Test/Amazonka/Braket/Internal.hs",
        "test/Test/Amazonka/Gen/Braket.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_braket=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-braket",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
