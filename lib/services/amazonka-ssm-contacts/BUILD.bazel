load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-ssm-contacts/amazonka-ssm-contacts.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-ssm-contacts",
    srcs = [
        "gen/Amazonka/SSMContacts.hs",
        "gen/Amazonka/SSMContacts/AcceptPage.hs",
        "gen/Amazonka/SSMContacts/ActivateContactChannel.hs",
        "gen/Amazonka/SSMContacts/CreateContact.hs",
        "gen/Amazonka/SSMContacts/CreateContactChannel.hs",
        "gen/Amazonka/SSMContacts/DeactivateContactChannel.hs",
        "gen/Amazonka/SSMContacts/DeleteContact.hs",
        "gen/Amazonka/SSMContacts/DeleteContactChannel.hs",
        "gen/Amazonka/SSMContacts/DescribeEngagement.hs",
        "gen/Amazonka/SSMContacts/DescribePage.hs",
        "gen/Amazonka/SSMContacts/GetContact.hs",
        "gen/Amazonka/SSMContacts/GetContactChannel.hs",
        "gen/Amazonka/SSMContacts/GetContactPolicy.hs",
        "gen/Amazonka/SSMContacts/Lens.hs",
        "gen/Amazonka/SSMContacts/ListContactChannels.hs",
        "gen/Amazonka/SSMContacts/ListContacts.hs",
        "gen/Amazonka/SSMContacts/ListEngagements.hs",
        "gen/Amazonka/SSMContacts/ListPageReceipts.hs",
        "gen/Amazonka/SSMContacts/ListPagesByContact.hs",
        "gen/Amazonka/SSMContacts/ListPagesByEngagement.hs",
        "gen/Amazonka/SSMContacts/ListTagsForResource.hs",
        "gen/Amazonka/SSMContacts/PutContactPolicy.hs",
        "gen/Amazonka/SSMContacts/SendActivationCode.hs",
        "gen/Amazonka/SSMContacts/StartEngagement.hs",
        "gen/Amazonka/SSMContacts/StopEngagement.hs",
        "gen/Amazonka/SSMContacts/TagResource.hs",
        "gen/Amazonka/SSMContacts/Types.hs",
        "gen/Amazonka/SSMContacts/Types/AcceptCodeValidation.hs",
        "gen/Amazonka/SSMContacts/Types/AcceptType.hs",
        "gen/Amazonka/SSMContacts/Types/ActivationStatus.hs",
        "gen/Amazonka/SSMContacts/Types/ChannelTargetInfo.hs",
        "gen/Amazonka/SSMContacts/Types/ChannelType.hs",
        "gen/Amazonka/SSMContacts/Types/Contact.hs",
        "gen/Amazonka/SSMContacts/Types/ContactChannel.hs",
        "gen/Amazonka/SSMContacts/Types/ContactChannelAddress.hs",
        "gen/Amazonka/SSMContacts/Types/ContactTargetInfo.hs",
        "gen/Amazonka/SSMContacts/Types/ContactType.hs",
        "gen/Amazonka/SSMContacts/Types/Engagement.hs",
        "gen/Amazonka/SSMContacts/Types/Page.hs",
        "gen/Amazonka/SSMContacts/Types/Plan.hs",
        "gen/Amazonka/SSMContacts/Types/Receipt.hs",
        "gen/Amazonka/SSMContacts/Types/ReceiptType.hs",
        "gen/Amazonka/SSMContacts/Types/Stage.hs",
        "gen/Amazonka/SSMContacts/Types/Tag.hs",
        "gen/Amazonka/SSMContacts/Types/Target.hs",
        "gen/Amazonka/SSMContacts/Types/TimeRange.hs",
        "gen/Amazonka/SSMContacts/UntagResource.hs",
        "gen/Amazonka/SSMContacts/UpdateContact.hs",
        "gen/Amazonka/SSMContacts/UpdateContactChannel.hs",
        "gen/Amazonka/SSMContacts/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_ssm_contacts=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-ssm-contacts/amazonka-ssm-contacts.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-ssm-contacts-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/SSMContacts.hs",
        "test/Test/Amazonka/SSMContacts.hs",
        "test/Test/Amazonka/SSMContacts/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_ssm_contacts=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-ssm-contacts",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
