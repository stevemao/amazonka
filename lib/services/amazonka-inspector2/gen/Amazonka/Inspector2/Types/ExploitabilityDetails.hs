{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE StrictData #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Amazonka.Inspector2.Types.ExploitabilityDetails
-- Copyright   : (c) 2013-2022 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
module Amazonka.Inspector2.Types.ExploitabilityDetails where

import qualified Amazonka.Core as Core
import qualified Amazonka.Core.Lens.Internal as Lens
import qualified Amazonka.Data as Data
import qualified Amazonka.Prelude as Prelude

-- | The details of an exploit available for a finding discovered in your
-- environment.
--
-- /See:/ 'newExploitabilityDetails' smart constructor.
data ExploitabilityDetails = ExploitabilityDetails'
  { -- | The date and time of the last exploit associated with a finding
    -- discovered in your environment.
    lastKnownExploitAt :: Prelude.Maybe Data.POSIX
  }
  deriving (Prelude.Eq, Prelude.Read, Prelude.Show, Prelude.Generic)

-- |
-- Create a value of 'ExploitabilityDetails' with all optional fields omitted.
--
-- Use <https://hackage.haskell.org/package/generic-lens generic-lens> or <https://hackage.haskell.org/package/optics optics> to modify other optional fields.
--
-- The following record fields are available, with the corresponding lenses provided
-- for backwards compatibility:
--
-- 'lastKnownExploitAt', 'exploitabilityDetails_lastKnownExploitAt' - The date and time of the last exploit associated with a finding
-- discovered in your environment.
newExploitabilityDetails ::
  ExploitabilityDetails
newExploitabilityDetails =
  ExploitabilityDetails'
    { lastKnownExploitAt =
        Prelude.Nothing
    }

-- | The date and time of the last exploit associated with a finding
-- discovered in your environment.
exploitabilityDetails_lastKnownExploitAt :: Lens.Lens' ExploitabilityDetails (Prelude.Maybe Prelude.UTCTime)
exploitabilityDetails_lastKnownExploitAt = Lens.lens (\ExploitabilityDetails' {lastKnownExploitAt} -> lastKnownExploitAt) (\s@ExploitabilityDetails' {} a -> s {lastKnownExploitAt = a} :: ExploitabilityDetails) Prelude.. Lens.mapping Data._Time

instance Data.FromJSON ExploitabilityDetails where
  parseJSON =
    Data.withObject
      "ExploitabilityDetails"
      ( \x ->
          ExploitabilityDetails'
            Prelude.<$> (x Data..:? "lastKnownExploitAt")
      )

instance Prelude.Hashable ExploitabilityDetails where
  hashWithSalt _salt ExploitabilityDetails' {..} =
    _salt `Prelude.hashWithSalt` lastKnownExploitAt

instance Prelude.NFData ExploitabilityDetails where
  rnf ExploitabilityDetails' {..} =
    Prelude.rnf lastKnownExploitAt
