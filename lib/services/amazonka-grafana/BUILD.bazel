load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-grafana/amazonka-grafana.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-grafana",
    srcs = [
        "gen/Amazonka/Grafana.hs",
        "gen/Amazonka/Grafana/AssociateLicense.hs",
        "gen/Amazonka/Grafana/CreateWorkspace.hs",
        "gen/Amazonka/Grafana/CreateWorkspaceApiKey.hs",
        "gen/Amazonka/Grafana/DeleteWorkspace.hs",
        "gen/Amazonka/Grafana/DeleteWorkspaceApiKey.hs",
        "gen/Amazonka/Grafana/DescribeWorkspace.hs",
        "gen/Amazonka/Grafana/DescribeWorkspaceAuthentication.hs",
        "gen/Amazonka/Grafana/DescribeWorkspaceConfiguration.hs",
        "gen/Amazonka/Grafana/DisassociateLicense.hs",
        "gen/Amazonka/Grafana/Lens.hs",
        "gen/Amazonka/Grafana/ListPermissions.hs",
        "gen/Amazonka/Grafana/ListTagsForResource.hs",
        "gen/Amazonka/Grafana/ListWorkspaces.hs",
        "gen/Amazonka/Grafana/TagResource.hs",
        "gen/Amazonka/Grafana/Types.hs",
        "gen/Amazonka/Grafana/Types/AccountAccessType.hs",
        "gen/Amazonka/Grafana/Types/AssertionAttributes.hs",
        "gen/Amazonka/Grafana/Types/AuthenticationDescription.hs",
        "gen/Amazonka/Grafana/Types/AuthenticationProviderTypes.hs",
        "gen/Amazonka/Grafana/Types/AuthenticationSummary.hs",
        "gen/Amazonka/Grafana/Types/AwsSsoAuthentication.hs",
        "gen/Amazonka/Grafana/Types/DataSourceType.hs",
        "gen/Amazonka/Grafana/Types/IdpMetadata.hs",
        "gen/Amazonka/Grafana/Types/LicenseType.hs",
        "gen/Amazonka/Grafana/Types/NotificationDestinationType.hs",
        "gen/Amazonka/Grafana/Types/PermissionEntry.hs",
        "gen/Amazonka/Grafana/Types/PermissionType.hs",
        "gen/Amazonka/Grafana/Types/Role.hs",
        "gen/Amazonka/Grafana/Types/RoleValues.hs",
        "gen/Amazonka/Grafana/Types/SamlAuthentication.hs",
        "gen/Amazonka/Grafana/Types/SamlConfiguration.hs",
        "gen/Amazonka/Grafana/Types/SamlConfigurationStatus.hs",
        "gen/Amazonka/Grafana/Types/UpdateAction.hs",
        "gen/Amazonka/Grafana/Types/UpdateError.hs",
        "gen/Amazonka/Grafana/Types/UpdateInstruction.hs",
        "gen/Amazonka/Grafana/Types/User.hs",
        "gen/Amazonka/Grafana/Types/UserType.hs",
        "gen/Amazonka/Grafana/Types/VpcConfiguration.hs",
        "gen/Amazonka/Grafana/Types/WorkspaceDescription.hs",
        "gen/Amazonka/Grafana/Types/WorkspaceStatus.hs",
        "gen/Amazonka/Grafana/Types/WorkspaceSummary.hs",
        "gen/Amazonka/Grafana/UntagResource.hs",
        "gen/Amazonka/Grafana/UpdatePermissions.hs",
        "gen/Amazonka/Grafana/UpdateWorkspace.hs",
        "gen/Amazonka/Grafana/UpdateWorkspaceAuthentication.hs",
        "gen/Amazonka/Grafana/UpdateWorkspaceConfiguration.hs",
        "gen/Amazonka/Grafana/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_grafana=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-grafana/amazonka-grafana.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-grafana-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/Grafana.hs",
        "test/Test/Amazonka/Grafana.hs",
        "test/Test/Amazonka/Grafana/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_grafana=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-grafana",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
