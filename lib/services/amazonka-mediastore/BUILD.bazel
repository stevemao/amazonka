load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-mediastore/amazonka-mediastore.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-mediastore",
    srcs = [
        "gen/Amazonka/MediaStore.hs",
        "gen/Amazonka/MediaStore/CreateContainer.hs",
        "gen/Amazonka/MediaStore/DeleteContainer.hs",
        "gen/Amazonka/MediaStore/DeleteContainerPolicy.hs",
        "gen/Amazonka/MediaStore/DeleteCorsPolicy.hs",
        "gen/Amazonka/MediaStore/DeleteLifecyclePolicy.hs",
        "gen/Amazonka/MediaStore/DeleteMetricPolicy.hs",
        "gen/Amazonka/MediaStore/DescribeContainer.hs",
        "gen/Amazonka/MediaStore/GetContainerPolicy.hs",
        "gen/Amazonka/MediaStore/GetCorsPolicy.hs",
        "gen/Amazonka/MediaStore/GetLifecyclePolicy.hs",
        "gen/Amazonka/MediaStore/GetMetricPolicy.hs",
        "gen/Amazonka/MediaStore/Lens.hs",
        "gen/Amazonka/MediaStore/ListContainers.hs",
        "gen/Amazonka/MediaStore/ListTagsForResource.hs",
        "gen/Amazonka/MediaStore/PutContainerPolicy.hs",
        "gen/Amazonka/MediaStore/PutCorsPolicy.hs",
        "gen/Amazonka/MediaStore/PutLifecyclePolicy.hs",
        "gen/Amazonka/MediaStore/PutMetricPolicy.hs",
        "gen/Amazonka/MediaStore/StartAccessLogging.hs",
        "gen/Amazonka/MediaStore/StopAccessLogging.hs",
        "gen/Amazonka/MediaStore/TagResource.hs",
        "gen/Amazonka/MediaStore/Types.hs",
        "gen/Amazonka/MediaStore/Types/Container.hs",
        "gen/Amazonka/MediaStore/Types/ContainerLevelMetrics.hs",
        "gen/Amazonka/MediaStore/Types/ContainerStatus.hs",
        "gen/Amazonka/MediaStore/Types/CorsRule.hs",
        "gen/Amazonka/MediaStore/Types/MethodName.hs",
        "gen/Amazonka/MediaStore/Types/MetricPolicy.hs",
        "gen/Amazonka/MediaStore/Types/MetricPolicyRule.hs",
        "gen/Amazonka/MediaStore/Types/Tag.hs",
        "gen/Amazonka/MediaStore/UntagResource.hs",
        "gen/Amazonka/MediaStore/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_mediastore=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-mediastore/amazonka-mediastore.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-mediastore-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/MediaStore.hs",
        "test/Test/Amazonka/MediaStore.hs",
        "test/Test/Amazonka/MediaStore/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_mediastore=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-mediastore",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
