load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-managedblockchain/amazonka-managedblockchain.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-managedblockchain",
    srcs = [
        "gen/Amazonka/ManagedBlockChain.hs",
        "gen/Amazonka/ManagedBlockChain/CreateAccessor.hs",
        "gen/Amazonka/ManagedBlockChain/CreateMember.hs",
        "gen/Amazonka/ManagedBlockChain/CreateNetwork.hs",
        "gen/Amazonka/ManagedBlockChain/CreateNode.hs",
        "gen/Amazonka/ManagedBlockChain/CreateProposal.hs",
        "gen/Amazonka/ManagedBlockChain/DeleteAccessor.hs",
        "gen/Amazonka/ManagedBlockChain/DeleteMember.hs",
        "gen/Amazonka/ManagedBlockChain/DeleteNode.hs",
        "gen/Amazonka/ManagedBlockChain/GetAccessor.hs",
        "gen/Amazonka/ManagedBlockChain/GetMember.hs",
        "gen/Amazonka/ManagedBlockChain/GetNetwork.hs",
        "gen/Amazonka/ManagedBlockChain/GetNode.hs",
        "gen/Amazonka/ManagedBlockChain/GetProposal.hs",
        "gen/Amazonka/ManagedBlockChain/Lens.hs",
        "gen/Amazonka/ManagedBlockChain/ListAccessors.hs",
        "gen/Amazonka/ManagedBlockChain/ListInvitations.hs",
        "gen/Amazonka/ManagedBlockChain/ListMembers.hs",
        "gen/Amazonka/ManagedBlockChain/ListNetworks.hs",
        "gen/Amazonka/ManagedBlockChain/ListNodes.hs",
        "gen/Amazonka/ManagedBlockChain/ListProposalVotes.hs",
        "gen/Amazonka/ManagedBlockChain/ListProposals.hs",
        "gen/Amazonka/ManagedBlockChain/ListTagsForResource.hs",
        "gen/Amazonka/ManagedBlockChain/RejectInvitation.hs",
        "gen/Amazonka/ManagedBlockChain/TagResource.hs",
        "gen/Amazonka/ManagedBlockChain/Types.hs",
        "gen/Amazonka/ManagedBlockChain/Types/Accessor.hs",
        "gen/Amazonka/ManagedBlockChain/Types/AccessorStatus.hs",
        "gen/Amazonka/ManagedBlockChain/Types/AccessorSummary.hs",
        "gen/Amazonka/ManagedBlockChain/Types/AccessorType.hs",
        "gen/Amazonka/ManagedBlockChain/Types/ApprovalThresholdPolicy.hs",
        "gen/Amazonka/ManagedBlockChain/Types/Edition.hs",
        "gen/Amazonka/ManagedBlockChain/Types/Framework.hs",
        "gen/Amazonka/ManagedBlockChain/Types/Invitation.hs",
        "gen/Amazonka/ManagedBlockChain/Types/InvitationStatus.hs",
        "gen/Amazonka/ManagedBlockChain/Types/InviteAction.hs",
        "gen/Amazonka/ManagedBlockChain/Types/LogConfiguration.hs",
        "gen/Amazonka/ManagedBlockChain/Types/LogConfigurations.hs",
        "gen/Amazonka/ManagedBlockChain/Types/Member.hs",
        "gen/Amazonka/ManagedBlockChain/Types/MemberConfiguration.hs",
        "gen/Amazonka/ManagedBlockChain/Types/MemberFabricAttributes.hs",
        "gen/Amazonka/ManagedBlockChain/Types/MemberFabricConfiguration.hs",
        "gen/Amazonka/ManagedBlockChain/Types/MemberFabricLogPublishingConfiguration.hs",
        "gen/Amazonka/ManagedBlockChain/Types/MemberFrameworkAttributes.hs",
        "gen/Amazonka/ManagedBlockChain/Types/MemberFrameworkConfiguration.hs",
        "gen/Amazonka/ManagedBlockChain/Types/MemberLogPublishingConfiguration.hs",
        "gen/Amazonka/ManagedBlockChain/Types/MemberStatus.hs",
        "gen/Amazonka/ManagedBlockChain/Types/MemberSummary.hs",
        "gen/Amazonka/ManagedBlockChain/Types/Network.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NetworkEthereumAttributes.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NetworkFabricAttributes.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NetworkFabricConfiguration.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NetworkFrameworkAttributes.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NetworkFrameworkConfiguration.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NetworkStatus.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NetworkSummary.hs",
        "gen/Amazonka/ManagedBlockChain/Types/Node.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NodeConfiguration.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NodeEthereumAttributes.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NodeFabricAttributes.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NodeFabricLogPublishingConfiguration.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NodeFrameworkAttributes.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NodeLogPublishingConfiguration.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NodeStatus.hs",
        "gen/Amazonka/ManagedBlockChain/Types/NodeSummary.hs",
        "gen/Amazonka/ManagedBlockChain/Types/Proposal.hs",
        "gen/Amazonka/ManagedBlockChain/Types/ProposalActions.hs",
        "gen/Amazonka/ManagedBlockChain/Types/ProposalStatus.hs",
        "gen/Amazonka/ManagedBlockChain/Types/ProposalSummary.hs",
        "gen/Amazonka/ManagedBlockChain/Types/RemoveAction.hs",
        "gen/Amazonka/ManagedBlockChain/Types/StateDBType.hs",
        "gen/Amazonka/ManagedBlockChain/Types/ThresholdComparator.hs",
        "gen/Amazonka/ManagedBlockChain/Types/VoteSummary.hs",
        "gen/Amazonka/ManagedBlockChain/Types/VoteValue.hs",
        "gen/Amazonka/ManagedBlockChain/Types/VotingPolicy.hs",
        "gen/Amazonka/ManagedBlockChain/UntagResource.hs",
        "gen/Amazonka/ManagedBlockChain/UpdateMember.hs",
        "gen/Amazonka/ManagedBlockChain/UpdateNode.hs",
        "gen/Amazonka/ManagedBlockChain/VoteOnProposal.hs",
        "gen/Amazonka/ManagedBlockChain/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_managedblockchain=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-managedblockchain/amazonka-managedblockchain.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-managedblockchain-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/ManagedBlockChain.hs",
        "test/Test/Amazonka/ManagedBlockChain.hs",
        "test/Test/Amazonka/ManagedBlockChain/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_managedblockchain=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-managedblockchain",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
