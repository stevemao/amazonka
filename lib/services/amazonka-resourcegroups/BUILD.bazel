load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-resourcegroups/amazonka-resourcegroups.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-resourcegroups",
    srcs = [
        "gen/Amazonka/ResourceGroups.hs",
        "gen/Amazonka/ResourceGroups/CreateGroup.hs",
        "gen/Amazonka/ResourceGroups/DeleteGroup.hs",
        "gen/Amazonka/ResourceGroups/GetGroup.hs",
        "gen/Amazonka/ResourceGroups/GetGroupConfiguration.hs",
        "gen/Amazonka/ResourceGroups/GetGroupQuery.hs",
        "gen/Amazonka/ResourceGroups/GetTags.hs",
        "gen/Amazonka/ResourceGroups/GroupResources.hs",
        "gen/Amazonka/ResourceGroups/Lens.hs",
        "gen/Amazonka/ResourceGroups/ListGroupResources.hs",
        "gen/Amazonka/ResourceGroups/ListGroups.hs",
        "gen/Amazonka/ResourceGroups/PutGroupConfiguration.hs",
        "gen/Amazonka/ResourceGroups/SearchResources.hs",
        "gen/Amazonka/ResourceGroups/Tag.hs",
        "gen/Amazonka/ResourceGroups/Types.hs",
        "gen/Amazonka/ResourceGroups/Types/FailedResource.hs",
        "gen/Amazonka/ResourceGroups/Types/Group.hs",
        "gen/Amazonka/ResourceGroups/Types/GroupConfiguration.hs",
        "gen/Amazonka/ResourceGroups/Types/GroupConfigurationItem.hs",
        "gen/Amazonka/ResourceGroups/Types/GroupConfigurationParameter.hs",
        "gen/Amazonka/ResourceGroups/Types/GroupConfigurationStatus.hs",
        "gen/Amazonka/ResourceGroups/Types/GroupFilter.hs",
        "gen/Amazonka/ResourceGroups/Types/GroupFilterName.hs",
        "gen/Amazonka/ResourceGroups/Types/GroupIdentifier.hs",
        "gen/Amazonka/ResourceGroups/Types/GroupQuery.hs",
        "gen/Amazonka/ResourceGroups/Types/ListGroupResourcesItem.hs",
        "gen/Amazonka/ResourceGroups/Types/PendingResource.hs",
        "gen/Amazonka/ResourceGroups/Types/QueryError.hs",
        "gen/Amazonka/ResourceGroups/Types/QueryErrorCode.hs",
        "gen/Amazonka/ResourceGroups/Types/QueryType.hs",
        "gen/Amazonka/ResourceGroups/Types/ResourceFilter.hs",
        "gen/Amazonka/ResourceGroups/Types/ResourceFilterName.hs",
        "gen/Amazonka/ResourceGroups/Types/ResourceIdentifier.hs",
        "gen/Amazonka/ResourceGroups/Types/ResourceQuery.hs",
        "gen/Amazonka/ResourceGroups/Types/ResourceStatus.hs",
        "gen/Amazonka/ResourceGroups/Types/ResourceStatusValue.hs",
        "gen/Amazonka/ResourceGroups/UngroupResources.hs",
        "gen/Amazonka/ResourceGroups/Untag.hs",
        "gen/Amazonka/ResourceGroups/UpdateGroup.hs",
        "gen/Amazonka/ResourceGroups/UpdateGroupQuery.hs",
        "gen/Amazonka/ResourceGroups/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_resourcegroups=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-resourcegroups/amazonka-resourcegroups.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-resourcegroups-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/ResourceGroups.hs",
        "test/Test/Amazonka/ResourceGroups.hs",
        "test/Test/Amazonka/ResourceGroups/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_resourcegroups=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-resourcegroups",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
