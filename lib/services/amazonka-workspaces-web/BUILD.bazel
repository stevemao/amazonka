load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-workspaces-web/amazonka-workspaces-web.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-workspaces-web",
    srcs = [
        "gen/Amazonka/WorkSpacesWeb.hs",
        "gen/Amazonka/WorkSpacesWeb/AssociateBrowserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/AssociateNetworkSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/AssociateTrustStore.hs",
        "gen/Amazonka/WorkSpacesWeb/AssociateUserAccessLoggingSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/AssociateUserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/CreateBrowserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/CreateIdentityProvider.hs",
        "gen/Amazonka/WorkSpacesWeb/CreateNetworkSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/CreatePortal.hs",
        "gen/Amazonka/WorkSpacesWeb/CreateTrustStore.hs",
        "gen/Amazonka/WorkSpacesWeb/CreateUserAccessLoggingSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/CreateUserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/DeleteBrowserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/DeleteIdentityProvider.hs",
        "gen/Amazonka/WorkSpacesWeb/DeleteNetworkSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/DeletePortal.hs",
        "gen/Amazonka/WorkSpacesWeb/DeleteTrustStore.hs",
        "gen/Amazonka/WorkSpacesWeb/DeleteUserAccessLoggingSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/DeleteUserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/DisassociateBrowserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/DisassociateNetworkSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/DisassociateTrustStore.hs",
        "gen/Amazonka/WorkSpacesWeb/DisassociateUserAccessLoggingSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/DisassociateUserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/GetBrowserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/GetIdentityProvider.hs",
        "gen/Amazonka/WorkSpacesWeb/GetNetworkSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/GetPortal.hs",
        "gen/Amazonka/WorkSpacesWeb/GetPortalServiceProviderMetadata.hs",
        "gen/Amazonka/WorkSpacesWeb/GetTrustStore.hs",
        "gen/Amazonka/WorkSpacesWeb/GetTrustStoreCertificate.hs",
        "gen/Amazonka/WorkSpacesWeb/GetUserAccessLoggingSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/GetUserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/Lens.hs",
        "gen/Amazonka/WorkSpacesWeb/ListBrowserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/ListIdentityProviders.hs",
        "gen/Amazonka/WorkSpacesWeb/ListNetworkSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/ListPortals.hs",
        "gen/Amazonka/WorkSpacesWeb/ListTagsForResource.hs",
        "gen/Amazonka/WorkSpacesWeb/ListTrustStoreCertificates.hs",
        "gen/Amazonka/WorkSpacesWeb/ListTrustStores.hs",
        "gen/Amazonka/WorkSpacesWeb/ListUserAccessLoggingSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/ListUserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/TagResource.hs",
        "gen/Amazonka/WorkSpacesWeb/Types.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/BrowserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/BrowserSettingsSummary.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/BrowserType.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/Certificate.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/CertificateSummary.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/EnabledType.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/IdentityProvider.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/IdentityProviderSummary.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/IdentityProviderType.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/NetworkSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/NetworkSettingsSummary.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/Portal.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/PortalStatus.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/PortalSummary.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/RendererType.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/Tag.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/TrustStore.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/TrustStoreSummary.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/UserAccessLoggingSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/UserAccessLoggingSettingsSummary.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/UserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/Types/UserSettingsSummary.hs",
        "gen/Amazonka/WorkSpacesWeb/UntagResource.hs",
        "gen/Amazonka/WorkSpacesWeb/UpdateBrowserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/UpdateIdentityProvider.hs",
        "gen/Amazonka/WorkSpacesWeb/UpdateNetworkSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/UpdatePortal.hs",
        "gen/Amazonka/WorkSpacesWeb/UpdateTrustStore.hs",
        "gen/Amazonka/WorkSpacesWeb/UpdateUserAccessLoggingSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/UpdateUserSettings.hs",
        "gen/Amazonka/WorkSpacesWeb/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_workspaces_web=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-workspaces-web/amazonka-workspaces-web.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-workspaces-web-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/WorkSpacesWeb.hs",
        "test/Test/Amazonka/WorkSpacesWeb.hs",
        "test/Test/Amazonka/WorkSpacesWeb/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_workspaces_web=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-workspaces-web",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
