load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-detective/amazonka-detective.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-detective",
    srcs = [
        "gen/Amazonka/Detective.hs",
        "gen/Amazonka/Detective/AcceptInvitation.hs",
        "gen/Amazonka/Detective/BatchGetGraphMemberDatasources.hs",
        "gen/Amazonka/Detective/BatchGetMembershipDatasources.hs",
        "gen/Amazonka/Detective/CreateGraph.hs",
        "gen/Amazonka/Detective/CreateMembers.hs",
        "gen/Amazonka/Detective/DeleteGraph.hs",
        "gen/Amazonka/Detective/DeleteMembers.hs",
        "gen/Amazonka/Detective/DescribeOrganizationConfiguration.hs",
        "gen/Amazonka/Detective/DisableOrganizationAdminAccount.hs",
        "gen/Amazonka/Detective/DisassociateMembership.hs",
        "gen/Amazonka/Detective/EnableOrganizationAdminAccount.hs",
        "gen/Amazonka/Detective/GetMembers.hs",
        "gen/Amazonka/Detective/Lens.hs",
        "gen/Amazonka/Detective/ListDatasourcePackages.hs",
        "gen/Amazonka/Detective/ListGraphs.hs",
        "gen/Amazonka/Detective/ListInvitations.hs",
        "gen/Amazonka/Detective/ListMembers.hs",
        "gen/Amazonka/Detective/ListOrganizationAdminAccounts.hs",
        "gen/Amazonka/Detective/ListTagsForResource.hs",
        "gen/Amazonka/Detective/RejectInvitation.hs",
        "gen/Amazonka/Detective/StartMonitoringMember.hs",
        "gen/Amazonka/Detective/TagResource.hs",
        "gen/Amazonka/Detective/Types.hs",
        "gen/Amazonka/Detective/Types/Account.hs",
        "gen/Amazonka/Detective/Types/Administrator.hs",
        "gen/Amazonka/Detective/Types/DatasourcePackage.hs",
        "gen/Amazonka/Detective/Types/DatasourcePackageIngestDetail.hs",
        "gen/Amazonka/Detective/Types/DatasourcePackageIngestState.hs",
        "gen/Amazonka/Detective/Types/DatasourcePackageUsageInfo.hs",
        "gen/Amazonka/Detective/Types/Graph.hs",
        "gen/Amazonka/Detective/Types/InvitationType.hs",
        "gen/Amazonka/Detective/Types/MemberDetail.hs",
        "gen/Amazonka/Detective/Types/MemberDisabledReason.hs",
        "gen/Amazonka/Detective/Types/MemberStatus.hs",
        "gen/Amazonka/Detective/Types/MembershipDatasources.hs",
        "gen/Amazonka/Detective/Types/TimestampForCollection.hs",
        "gen/Amazonka/Detective/Types/UnprocessedAccount.hs",
        "gen/Amazonka/Detective/Types/UnprocessedGraph.hs",
        "gen/Amazonka/Detective/UntagResource.hs",
        "gen/Amazonka/Detective/UpdateDatasourcePackages.hs",
        "gen/Amazonka/Detective/UpdateOrganizationConfiguration.hs",
        "gen/Amazonka/Detective/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_detective=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-detective/amazonka-detective.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-detective-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Detective.hs",
        "test/Test/Amazonka/Detective/Internal.hs",
        "test/Test/Amazonka/Gen/Detective.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_detective=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-detective",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
