load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-ram/amazonka-ram.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-ram",
    srcs = [
        "gen/Amazonka/RAM.hs",
        "gen/Amazonka/RAM/AcceptResourceShareInvitation.hs",
        "gen/Amazonka/RAM/AssociateResourceShare.hs",
        "gen/Amazonka/RAM/AssociateResourceSharePermission.hs",
        "gen/Amazonka/RAM/CreateResourceShare.hs",
        "gen/Amazonka/RAM/DeleteResourceShare.hs",
        "gen/Amazonka/RAM/DisassociateResourceShare.hs",
        "gen/Amazonka/RAM/DisassociateResourceSharePermission.hs",
        "gen/Amazonka/RAM/EnableSharingWithAwsOrganization.hs",
        "gen/Amazonka/RAM/GetPermission.hs",
        "gen/Amazonka/RAM/GetResourcePolicies.hs",
        "gen/Amazonka/RAM/GetResourceShareAssociations.hs",
        "gen/Amazonka/RAM/GetResourceShareInvitations.hs",
        "gen/Amazonka/RAM/GetResourceShares.hs",
        "gen/Amazonka/RAM/Lens.hs",
        "gen/Amazonka/RAM/ListPendingInvitationResources.hs",
        "gen/Amazonka/RAM/ListPermissionVersions.hs",
        "gen/Amazonka/RAM/ListPermissions.hs",
        "gen/Amazonka/RAM/ListPrincipals.hs",
        "gen/Amazonka/RAM/ListResourceSharePermissions.hs",
        "gen/Amazonka/RAM/ListResourceTypes.hs",
        "gen/Amazonka/RAM/ListResources.hs",
        "gen/Amazonka/RAM/PromoteResourceShareCreatedFromPolicy.hs",
        "gen/Amazonka/RAM/RejectResourceShareInvitation.hs",
        "gen/Amazonka/RAM/TagResource.hs",
        "gen/Amazonka/RAM/Types.hs",
        "gen/Amazonka/RAM/Types/Principal.hs",
        "gen/Amazonka/RAM/Types/Resource.hs",
        "gen/Amazonka/RAM/Types/ResourceOwner.hs",
        "gen/Amazonka/RAM/Types/ResourceRegionScope.hs",
        "gen/Amazonka/RAM/Types/ResourceRegionScopeFilter.hs",
        "gen/Amazonka/RAM/Types/ResourceShare.hs",
        "gen/Amazonka/RAM/Types/ResourceShareAssociation.hs",
        "gen/Amazonka/RAM/Types/ResourceShareAssociationStatus.hs",
        "gen/Amazonka/RAM/Types/ResourceShareAssociationType.hs",
        "gen/Amazonka/RAM/Types/ResourceShareFeatureSet.hs",
        "gen/Amazonka/RAM/Types/ResourceShareInvitation.hs",
        "gen/Amazonka/RAM/Types/ResourceShareInvitationStatus.hs",
        "gen/Amazonka/RAM/Types/ResourceSharePermissionDetail.hs",
        "gen/Amazonka/RAM/Types/ResourceSharePermissionSummary.hs",
        "gen/Amazonka/RAM/Types/ResourceShareStatus.hs",
        "gen/Amazonka/RAM/Types/ResourceStatus.hs",
        "gen/Amazonka/RAM/Types/ServiceNameAndResourceType.hs",
        "gen/Amazonka/RAM/Types/Tag.hs",
        "gen/Amazonka/RAM/Types/TagFilter.hs",
        "gen/Amazonka/RAM/UntagResource.hs",
        "gen/Amazonka/RAM/UpdateResourceShare.hs",
        "gen/Amazonka/RAM/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_ram=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-ram/amazonka-ram.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-ram-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/RAM.hs",
        "test/Test/Amazonka/RAM.hs",
        "test/Test/Amazonka/RAM/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_ram=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-ram",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
