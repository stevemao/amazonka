load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-codestar-notifications/amazonka-codestar-notifications.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-codestar-notifications",
    srcs = [
        "gen/Amazonka/CodeStarNotifications.hs",
        "gen/Amazonka/CodeStarNotifications/CreateNotificationRule.hs",
        "gen/Amazonka/CodeStarNotifications/DeleteNotificationRule.hs",
        "gen/Amazonka/CodeStarNotifications/DeleteTarget.hs",
        "gen/Amazonka/CodeStarNotifications/DescribeNotificationRule.hs",
        "gen/Amazonka/CodeStarNotifications/Lens.hs",
        "gen/Amazonka/CodeStarNotifications/ListEventTypes.hs",
        "gen/Amazonka/CodeStarNotifications/ListNotificationRules.hs",
        "gen/Amazonka/CodeStarNotifications/ListTagsForResource.hs",
        "gen/Amazonka/CodeStarNotifications/ListTargets.hs",
        "gen/Amazonka/CodeStarNotifications/Subscribe.hs",
        "gen/Amazonka/CodeStarNotifications/TagResource.hs",
        "gen/Amazonka/CodeStarNotifications/Types.hs",
        "gen/Amazonka/CodeStarNotifications/Types/DetailType.hs",
        "gen/Amazonka/CodeStarNotifications/Types/EventTypeSummary.hs",
        "gen/Amazonka/CodeStarNotifications/Types/ListEventTypesFilter.hs",
        "gen/Amazonka/CodeStarNotifications/Types/ListEventTypesFilterName.hs",
        "gen/Amazonka/CodeStarNotifications/Types/ListNotificationRulesFilter.hs",
        "gen/Amazonka/CodeStarNotifications/Types/ListNotificationRulesFilterName.hs",
        "gen/Amazonka/CodeStarNotifications/Types/ListTargetsFilter.hs",
        "gen/Amazonka/CodeStarNotifications/Types/ListTargetsFilterName.hs",
        "gen/Amazonka/CodeStarNotifications/Types/NotificationRuleStatus.hs",
        "gen/Amazonka/CodeStarNotifications/Types/NotificationRuleSummary.hs",
        "gen/Amazonka/CodeStarNotifications/Types/Target.hs",
        "gen/Amazonka/CodeStarNotifications/Types/TargetStatus.hs",
        "gen/Amazonka/CodeStarNotifications/Types/TargetSummary.hs",
        "gen/Amazonka/CodeStarNotifications/Unsubscribe.hs",
        "gen/Amazonka/CodeStarNotifications/UntagResource.hs",
        "gen/Amazonka/CodeStarNotifications/UpdateNotificationRule.hs",
        "gen/Amazonka/CodeStarNotifications/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_codestar_notifications=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-codestar-notifications/amazonka-codestar-notifications.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-codestar-notifications-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/CodeStarNotifications.hs",
        "test/Test/Amazonka/CodeStarNotifications/Internal.hs",
        "test/Test/Amazonka/Gen/CodeStarNotifications.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_codestar_notifications=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-codestar-notifications",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
