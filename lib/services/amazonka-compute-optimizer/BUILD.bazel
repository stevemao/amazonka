load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-compute-optimizer/amazonka-compute-optimizer.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-compute-optimizer",
    srcs = [
        "gen/Amazonka/ComputeOptimizer.hs",
        "gen/Amazonka/ComputeOptimizer/DeleteRecommendationPreferences.hs",
        "gen/Amazonka/ComputeOptimizer/DescribeRecommendationExportJobs.hs",
        "gen/Amazonka/ComputeOptimizer/ExportAutoScalingGroupRecommendations.hs",
        "gen/Amazonka/ComputeOptimizer/ExportEBSVolumeRecommendations.hs",
        "gen/Amazonka/ComputeOptimizer/ExportEC2InstanceRecommendations.hs",
        "gen/Amazonka/ComputeOptimizer/ExportLambdaFunctionRecommendations.hs",
        "gen/Amazonka/ComputeOptimizer/GetAutoScalingGroupRecommendations.hs",
        "gen/Amazonka/ComputeOptimizer/GetEBSVolumeRecommendations.hs",
        "gen/Amazonka/ComputeOptimizer/GetEC2InstanceRecommendations.hs",
        "gen/Amazonka/ComputeOptimizer/GetEC2RecommendationProjectedMetrics.hs",
        "gen/Amazonka/ComputeOptimizer/GetEffectiveRecommendationPreferences.hs",
        "gen/Amazonka/ComputeOptimizer/GetEnrollmentStatus.hs",
        "gen/Amazonka/ComputeOptimizer/GetEnrollmentStatusesForOrganization.hs",
        "gen/Amazonka/ComputeOptimizer/GetLambdaFunctionRecommendations.hs",
        "gen/Amazonka/ComputeOptimizer/GetRecommendationPreferences.hs",
        "gen/Amazonka/ComputeOptimizer/GetRecommendationSummaries.hs",
        "gen/Amazonka/ComputeOptimizer/Lens.hs",
        "gen/Amazonka/ComputeOptimizer/PutRecommendationPreferences.hs",
        "gen/Amazonka/ComputeOptimizer/Types.hs",
        "gen/Amazonka/ComputeOptimizer/Types/AccountEnrollmentStatus.hs",
        "gen/Amazonka/ComputeOptimizer/Types/AutoScalingGroupConfiguration.hs",
        "gen/Amazonka/ComputeOptimizer/Types/AutoScalingGroupRecommendation.hs",
        "gen/Amazonka/ComputeOptimizer/Types/AutoScalingGroupRecommendationOption.hs",
        "gen/Amazonka/ComputeOptimizer/Types/CpuVendorArchitecture.hs",
        "gen/Amazonka/ComputeOptimizer/Types/Currency.hs",
        "gen/Amazonka/ComputeOptimizer/Types/CurrentPerformanceRisk.hs",
        "gen/Amazonka/ComputeOptimizer/Types/CurrentPerformanceRiskRatings.hs",
        "gen/Amazonka/ComputeOptimizer/Types/EBSFilter.hs",
        "gen/Amazonka/ComputeOptimizer/Types/EBSFilterName.hs",
        "gen/Amazonka/ComputeOptimizer/Types/EBSFinding.hs",
        "gen/Amazonka/ComputeOptimizer/Types/EBSMetricName.hs",
        "gen/Amazonka/ComputeOptimizer/Types/EBSUtilizationMetric.hs",
        "gen/Amazonka/ComputeOptimizer/Types/EffectiveRecommendationPreferences.hs",
        "gen/Amazonka/ComputeOptimizer/Types/EnhancedInfrastructureMetrics.hs",
        "gen/Amazonka/ComputeOptimizer/Types/EnrollmentFilter.hs",
        "gen/Amazonka/ComputeOptimizer/Types/EnrollmentFilterName.hs",
        "gen/Amazonka/ComputeOptimizer/Types/EstimatedMonthlySavings.hs",
        "gen/Amazonka/ComputeOptimizer/Types/ExportDestination.hs",
        "gen/Amazonka/ComputeOptimizer/Types/ExportableAutoScalingGroupField.hs",
        "gen/Amazonka/ComputeOptimizer/Types/ExportableInstanceField.hs",
        "gen/Amazonka/ComputeOptimizer/Types/ExportableLambdaFunctionField.hs",
        "gen/Amazonka/ComputeOptimizer/Types/ExportableVolumeField.hs",
        "gen/Amazonka/ComputeOptimizer/Types/ExternalMetricsPreference.hs",
        "gen/Amazonka/ComputeOptimizer/Types/ExternalMetricsSource.hs",
        "gen/Amazonka/ComputeOptimizer/Types/FileFormat.hs",
        "gen/Amazonka/ComputeOptimizer/Types/Filter.hs",
        "gen/Amazonka/ComputeOptimizer/Types/FilterName.hs",
        "gen/Amazonka/ComputeOptimizer/Types/Finding.hs",
        "gen/Amazonka/ComputeOptimizer/Types/FindingReasonCode.hs",
        "gen/Amazonka/ComputeOptimizer/Types/GetRecommendationError.hs",
        "gen/Amazonka/ComputeOptimizer/Types/InferredWorkloadType.hs",
        "gen/Amazonka/ComputeOptimizer/Types/InferredWorkloadTypesPreference.hs",
        "gen/Amazonka/ComputeOptimizer/Types/InstanceRecommendation.hs",
        "gen/Amazonka/ComputeOptimizer/Types/InstanceRecommendationFindingReasonCode.hs",
        "gen/Amazonka/ComputeOptimizer/Types/InstanceRecommendationOption.hs",
        "gen/Amazonka/ComputeOptimizer/Types/JobFilter.hs",
        "gen/Amazonka/ComputeOptimizer/Types/JobFilterName.hs",
        "gen/Amazonka/ComputeOptimizer/Types/JobStatus.hs",
        "gen/Amazonka/ComputeOptimizer/Types/LambdaFunctionMemoryMetricName.hs",
        "gen/Amazonka/ComputeOptimizer/Types/LambdaFunctionMemoryMetricStatistic.hs",
        "gen/Amazonka/ComputeOptimizer/Types/LambdaFunctionMemoryProjectedMetric.hs",
        "gen/Amazonka/ComputeOptimizer/Types/LambdaFunctionMemoryRecommendationOption.hs",
        "gen/Amazonka/ComputeOptimizer/Types/LambdaFunctionMetricName.hs",
        "gen/Amazonka/ComputeOptimizer/Types/LambdaFunctionMetricStatistic.hs",
        "gen/Amazonka/ComputeOptimizer/Types/LambdaFunctionRecommendation.hs",
        "gen/Amazonka/ComputeOptimizer/Types/LambdaFunctionRecommendationFilter.hs",
        "gen/Amazonka/ComputeOptimizer/Types/LambdaFunctionRecommendationFilterName.hs",
        "gen/Amazonka/ComputeOptimizer/Types/LambdaFunctionRecommendationFinding.hs",
        "gen/Amazonka/ComputeOptimizer/Types/LambdaFunctionRecommendationFindingReasonCode.hs",
        "gen/Amazonka/ComputeOptimizer/Types/LambdaFunctionUtilizationMetric.hs",
        "gen/Amazonka/ComputeOptimizer/Types/MetricName.hs",
        "gen/Amazonka/ComputeOptimizer/Types/MetricStatistic.hs",
        "gen/Amazonka/ComputeOptimizer/Types/MigrationEffort.hs",
        "gen/Amazonka/ComputeOptimizer/Types/PlatformDifference.hs",
        "gen/Amazonka/ComputeOptimizer/Types/ProjectedMetric.hs",
        "gen/Amazonka/ComputeOptimizer/Types/ReasonCodeSummary.hs",
        "gen/Amazonka/ComputeOptimizer/Types/RecommendationExportJob.hs",
        "gen/Amazonka/ComputeOptimizer/Types/RecommendationPreferenceName.hs",
        "gen/Amazonka/ComputeOptimizer/Types/RecommendationPreferences.hs",
        "gen/Amazonka/ComputeOptimizer/Types/RecommendationPreferencesDetail.hs",
        "gen/Amazonka/ComputeOptimizer/Types/RecommendationSource.hs",
        "gen/Amazonka/ComputeOptimizer/Types/RecommendationSourceType.hs",
        "gen/Amazonka/ComputeOptimizer/Types/RecommendationSummary.hs",
        "gen/Amazonka/ComputeOptimizer/Types/RecommendedOptionProjectedMetric.hs",
        "gen/Amazonka/ComputeOptimizer/Types/ResourceType.hs",
        "gen/Amazonka/ComputeOptimizer/Types/S3Destination.hs",
        "gen/Amazonka/ComputeOptimizer/Types/S3DestinationConfig.hs",
        "gen/Amazonka/ComputeOptimizer/Types/SavingsOpportunity.hs",
        "gen/Amazonka/ComputeOptimizer/Types/Scope.hs",
        "gen/Amazonka/ComputeOptimizer/Types/ScopeName.hs",
        "gen/Amazonka/ComputeOptimizer/Types/Status.hs",
        "gen/Amazonka/ComputeOptimizer/Types/Summary.hs",
        "gen/Amazonka/ComputeOptimizer/Types/UtilizationMetric.hs",
        "gen/Amazonka/ComputeOptimizer/Types/VolumeConfiguration.hs",
        "gen/Amazonka/ComputeOptimizer/Types/VolumeRecommendation.hs",
        "gen/Amazonka/ComputeOptimizer/Types/VolumeRecommendationOption.hs",
        "gen/Amazonka/ComputeOptimizer/UpdateEnrollmentStatus.hs",
        "gen/Amazonka/ComputeOptimizer/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_compute_optimizer=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-compute-optimizer/amazonka-compute-optimizer.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-compute-optimizer-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/ComputeOptimizer.hs",
        "test/Test/Amazonka/ComputeOptimizer/Internal.hs",
        "test/Test/Amazonka/Gen/ComputeOptimizer.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_compute_optimizer=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-compute-optimizer",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
