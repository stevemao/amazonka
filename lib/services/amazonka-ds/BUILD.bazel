load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-ds/amazonka-ds.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-ds",
    srcs = [
        "gen/Amazonka/DirectoryService.hs",
        "gen/Amazonka/DirectoryService/AcceptSharedDirectory.hs",
        "gen/Amazonka/DirectoryService/AddIpRoutes.hs",
        "gen/Amazonka/DirectoryService/AddRegion.hs",
        "gen/Amazonka/DirectoryService/AddTagsToResource.hs",
        "gen/Amazonka/DirectoryService/CancelSchemaExtension.hs",
        "gen/Amazonka/DirectoryService/ConnectDirectory.hs",
        "gen/Amazonka/DirectoryService/CreateAlias.hs",
        "gen/Amazonka/DirectoryService/CreateComputer.hs",
        "gen/Amazonka/DirectoryService/CreateConditionalForwarder.hs",
        "gen/Amazonka/DirectoryService/CreateDirectory.hs",
        "gen/Amazonka/DirectoryService/CreateLogSubscription.hs",
        "gen/Amazonka/DirectoryService/CreateMicrosoftAD.hs",
        "gen/Amazonka/DirectoryService/CreateSnapshot.hs",
        "gen/Amazonka/DirectoryService/CreateTrust.hs",
        "gen/Amazonka/DirectoryService/DeleteConditionalForwarder.hs",
        "gen/Amazonka/DirectoryService/DeleteDirectory.hs",
        "gen/Amazonka/DirectoryService/DeleteLogSubscription.hs",
        "gen/Amazonka/DirectoryService/DeleteSnapshot.hs",
        "gen/Amazonka/DirectoryService/DeleteTrust.hs",
        "gen/Amazonka/DirectoryService/DeregisterCertificate.hs",
        "gen/Amazonka/DirectoryService/DeregisterEventTopic.hs",
        "gen/Amazonka/DirectoryService/DescribeCertificate.hs",
        "gen/Amazonka/DirectoryService/DescribeClientAuthenticationSettings.hs",
        "gen/Amazonka/DirectoryService/DescribeConditionalForwarders.hs",
        "gen/Amazonka/DirectoryService/DescribeDirectories.hs",
        "gen/Amazonka/DirectoryService/DescribeDomainControllers.hs",
        "gen/Amazonka/DirectoryService/DescribeEventTopics.hs",
        "gen/Amazonka/DirectoryService/DescribeLDAPSSettings.hs",
        "gen/Amazonka/DirectoryService/DescribeRegions.hs",
        "gen/Amazonka/DirectoryService/DescribeSettings.hs",
        "gen/Amazonka/DirectoryService/DescribeSharedDirectories.hs",
        "gen/Amazonka/DirectoryService/DescribeSnapshots.hs",
        "gen/Amazonka/DirectoryService/DescribeTrusts.hs",
        "gen/Amazonka/DirectoryService/DescribeUpdateDirectory.hs",
        "gen/Amazonka/DirectoryService/DisableClientAuthentication.hs",
        "gen/Amazonka/DirectoryService/DisableLDAPS.hs",
        "gen/Amazonka/DirectoryService/DisableRadius.hs",
        "gen/Amazonka/DirectoryService/DisableSso.hs",
        "gen/Amazonka/DirectoryService/EnableClientAuthentication.hs",
        "gen/Amazonka/DirectoryService/EnableLDAPS.hs",
        "gen/Amazonka/DirectoryService/EnableRadius.hs",
        "gen/Amazonka/DirectoryService/EnableSso.hs",
        "gen/Amazonka/DirectoryService/GetDirectoryLimits.hs",
        "gen/Amazonka/DirectoryService/GetSnapshotLimits.hs",
        "gen/Amazonka/DirectoryService/Lens.hs",
        "gen/Amazonka/DirectoryService/ListCertificates.hs",
        "gen/Amazonka/DirectoryService/ListIpRoutes.hs",
        "gen/Amazonka/DirectoryService/ListLogSubscriptions.hs",
        "gen/Amazonka/DirectoryService/ListSchemaExtensions.hs",
        "gen/Amazonka/DirectoryService/ListTagsForResource.hs",
        "gen/Amazonka/DirectoryService/RegisterCertificate.hs",
        "gen/Amazonka/DirectoryService/RegisterEventTopic.hs",
        "gen/Amazonka/DirectoryService/RejectSharedDirectory.hs",
        "gen/Amazonka/DirectoryService/RemoveIpRoutes.hs",
        "gen/Amazonka/DirectoryService/RemoveRegion.hs",
        "gen/Amazonka/DirectoryService/RemoveTagsFromResource.hs",
        "gen/Amazonka/DirectoryService/ResetUserPassword.hs",
        "gen/Amazonka/DirectoryService/RestoreFromSnapshot.hs",
        "gen/Amazonka/DirectoryService/ShareDirectory.hs",
        "gen/Amazonka/DirectoryService/StartSchemaExtension.hs",
        "gen/Amazonka/DirectoryService/Types.hs",
        "gen/Amazonka/DirectoryService/Types/Attribute.hs",
        "gen/Amazonka/DirectoryService/Types/Certificate.hs",
        "gen/Amazonka/DirectoryService/Types/CertificateInfo.hs",
        "gen/Amazonka/DirectoryService/Types/CertificateState.hs",
        "gen/Amazonka/DirectoryService/Types/CertificateType.hs",
        "gen/Amazonka/DirectoryService/Types/ClientAuthenticationSettingInfo.hs",
        "gen/Amazonka/DirectoryService/Types/ClientAuthenticationStatus.hs",
        "gen/Amazonka/DirectoryService/Types/ClientAuthenticationType.hs",
        "gen/Amazonka/DirectoryService/Types/ClientCertAuthSettings.hs",
        "gen/Amazonka/DirectoryService/Types/Computer.hs",
        "gen/Amazonka/DirectoryService/Types/ConditionalForwarder.hs",
        "gen/Amazonka/DirectoryService/Types/DirectoryConfigurationStatus.hs",
        "gen/Amazonka/DirectoryService/Types/DirectoryConnectSettings.hs",
        "gen/Amazonka/DirectoryService/Types/DirectoryConnectSettingsDescription.hs",
        "gen/Amazonka/DirectoryService/Types/DirectoryDescription.hs",
        "gen/Amazonka/DirectoryService/Types/DirectoryEdition.hs",
        "gen/Amazonka/DirectoryService/Types/DirectoryLimits.hs",
        "gen/Amazonka/DirectoryService/Types/DirectorySize.hs",
        "gen/Amazonka/DirectoryService/Types/DirectoryStage.hs",
        "gen/Amazonka/DirectoryService/Types/DirectoryType.hs",
        "gen/Amazonka/DirectoryService/Types/DirectoryVpcSettings.hs",
        "gen/Amazonka/DirectoryService/Types/DirectoryVpcSettingsDescription.hs",
        "gen/Amazonka/DirectoryService/Types/DomainController.hs",
        "gen/Amazonka/DirectoryService/Types/DomainControllerStatus.hs",
        "gen/Amazonka/DirectoryService/Types/EventTopic.hs",
        "gen/Amazonka/DirectoryService/Types/IpRoute.hs",
        "gen/Amazonka/DirectoryService/Types/IpRouteInfo.hs",
        "gen/Amazonka/DirectoryService/Types/IpRouteStatusMsg.hs",
        "gen/Amazonka/DirectoryService/Types/LDAPSSettingInfo.hs",
        "gen/Amazonka/DirectoryService/Types/LDAPSStatus.hs",
        "gen/Amazonka/DirectoryService/Types/LDAPSType.hs",
        "gen/Amazonka/DirectoryService/Types/LogSubscription.hs",
        "gen/Amazonka/DirectoryService/Types/OSUpdateSettings.hs",
        "gen/Amazonka/DirectoryService/Types/OSVersion.hs",
        "gen/Amazonka/DirectoryService/Types/OwnerDirectoryDescription.hs",
        "gen/Amazonka/DirectoryService/Types/RadiusAuthenticationProtocol.hs",
        "gen/Amazonka/DirectoryService/Types/RadiusSettings.hs",
        "gen/Amazonka/DirectoryService/Types/RadiusStatus.hs",
        "gen/Amazonka/DirectoryService/Types/RegionDescription.hs",
        "gen/Amazonka/DirectoryService/Types/RegionType.hs",
        "gen/Amazonka/DirectoryService/Types/RegionsInfo.hs",
        "gen/Amazonka/DirectoryService/Types/ReplicationScope.hs",
        "gen/Amazonka/DirectoryService/Types/SchemaExtensionInfo.hs",
        "gen/Amazonka/DirectoryService/Types/SchemaExtensionStatus.hs",
        "gen/Amazonka/DirectoryService/Types/SelectiveAuth.hs",
        "gen/Amazonka/DirectoryService/Types/Setting.hs",
        "gen/Amazonka/DirectoryService/Types/SettingEntry.hs",
        "gen/Amazonka/DirectoryService/Types/ShareMethod.hs",
        "gen/Amazonka/DirectoryService/Types/ShareStatus.hs",
        "gen/Amazonka/DirectoryService/Types/ShareTarget.hs",
        "gen/Amazonka/DirectoryService/Types/SharedDirectory.hs",
        "gen/Amazonka/DirectoryService/Types/Snapshot.hs",
        "gen/Amazonka/DirectoryService/Types/SnapshotLimits.hs",
        "gen/Amazonka/DirectoryService/Types/SnapshotStatus.hs",
        "gen/Amazonka/DirectoryService/Types/SnapshotType.hs",
        "gen/Amazonka/DirectoryService/Types/Tag.hs",
        "gen/Amazonka/DirectoryService/Types/TargetType.hs",
        "gen/Amazonka/DirectoryService/Types/TopicStatus.hs",
        "gen/Amazonka/DirectoryService/Types/Trust.hs",
        "gen/Amazonka/DirectoryService/Types/TrustDirection.hs",
        "gen/Amazonka/DirectoryService/Types/TrustState.hs",
        "gen/Amazonka/DirectoryService/Types/TrustType.hs",
        "gen/Amazonka/DirectoryService/Types/UnshareTarget.hs",
        "gen/Amazonka/DirectoryService/Types/UpdateInfoEntry.hs",
        "gen/Amazonka/DirectoryService/Types/UpdateStatus.hs",
        "gen/Amazonka/DirectoryService/Types/UpdateType.hs",
        "gen/Amazonka/DirectoryService/Types/UpdateValue.hs",
        "gen/Amazonka/DirectoryService/UnshareDirectory.hs",
        "gen/Amazonka/DirectoryService/UpdateConditionalForwarder.hs",
        "gen/Amazonka/DirectoryService/UpdateDirectorySetup.hs",
        "gen/Amazonka/DirectoryService/UpdateNumberOfDomainControllers.hs",
        "gen/Amazonka/DirectoryService/UpdateRadius.hs",
        "gen/Amazonka/DirectoryService/UpdateSettings.hs",
        "gen/Amazonka/DirectoryService/UpdateTrust.hs",
        "gen/Amazonka/DirectoryService/VerifyTrust.hs",
        "gen/Amazonka/DirectoryService/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_ds=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-ds/amazonka-ds.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-ds-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/DirectoryService.hs",
        "test/Test/Amazonka/DirectoryService/Internal.hs",
        "test/Test/Amazonka/Gen/DirectoryService.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_ds=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-ds",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
