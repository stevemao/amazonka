load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-iotfleetwise/amazonka-iotfleetwise.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-iotfleetwise",
    srcs = [
        "gen/Amazonka/IoTFleetWise.hs",
        "gen/Amazonka/IoTFleetWise/AssociateVehicleFleet.hs",
        "gen/Amazonka/IoTFleetWise/BatchCreateVehicle.hs",
        "gen/Amazonka/IoTFleetWise/BatchUpdateVehicle.hs",
        "gen/Amazonka/IoTFleetWise/CreateCampaign.hs",
        "gen/Amazonka/IoTFleetWise/CreateDecoderManifest.hs",
        "gen/Amazonka/IoTFleetWise/CreateFleet.hs",
        "gen/Amazonka/IoTFleetWise/CreateModelManifest.hs",
        "gen/Amazonka/IoTFleetWise/CreateSignalCatalog.hs",
        "gen/Amazonka/IoTFleetWise/CreateVehicle.hs",
        "gen/Amazonka/IoTFleetWise/DeleteCampaign.hs",
        "gen/Amazonka/IoTFleetWise/DeleteDecoderManifest.hs",
        "gen/Amazonka/IoTFleetWise/DeleteFleet.hs",
        "gen/Amazonka/IoTFleetWise/DeleteModelManifest.hs",
        "gen/Amazonka/IoTFleetWise/DeleteSignalCatalog.hs",
        "gen/Amazonka/IoTFleetWise/DeleteVehicle.hs",
        "gen/Amazonka/IoTFleetWise/DisassociateVehicleFleet.hs",
        "gen/Amazonka/IoTFleetWise/GetCampaign.hs",
        "gen/Amazonka/IoTFleetWise/GetDecoderManifest.hs",
        "gen/Amazonka/IoTFleetWise/GetFleet.hs",
        "gen/Amazonka/IoTFleetWise/GetLoggingOptions.hs",
        "gen/Amazonka/IoTFleetWise/GetModelManifest.hs",
        "gen/Amazonka/IoTFleetWise/GetRegisterAccountStatus.hs",
        "gen/Amazonka/IoTFleetWise/GetSignalCatalog.hs",
        "gen/Amazonka/IoTFleetWise/GetVehicle.hs",
        "gen/Amazonka/IoTFleetWise/GetVehicleStatus.hs",
        "gen/Amazonka/IoTFleetWise/ImportDecoderManifest.hs",
        "gen/Amazonka/IoTFleetWise/ImportSignalCatalog.hs",
        "gen/Amazonka/IoTFleetWise/Lens.hs",
        "gen/Amazonka/IoTFleetWise/ListCampaigns.hs",
        "gen/Amazonka/IoTFleetWise/ListDecoderManifestNetworkInterfaces.hs",
        "gen/Amazonka/IoTFleetWise/ListDecoderManifestSignals.hs",
        "gen/Amazonka/IoTFleetWise/ListDecoderManifests.hs",
        "gen/Amazonka/IoTFleetWise/ListFleets.hs",
        "gen/Amazonka/IoTFleetWise/ListFleetsForVehicle.hs",
        "gen/Amazonka/IoTFleetWise/ListModelManifestNodes.hs",
        "gen/Amazonka/IoTFleetWise/ListModelManifests.hs",
        "gen/Amazonka/IoTFleetWise/ListSignalCatalogNodes.hs",
        "gen/Amazonka/IoTFleetWise/ListSignalCatalogs.hs",
        "gen/Amazonka/IoTFleetWise/ListTagsForResource.hs",
        "gen/Amazonka/IoTFleetWise/ListVehicles.hs",
        "gen/Amazonka/IoTFleetWise/ListVehiclesInFleet.hs",
        "gen/Amazonka/IoTFleetWise/PutLoggingOptions.hs",
        "gen/Amazonka/IoTFleetWise/RegisterAccount.hs",
        "gen/Amazonka/IoTFleetWise/TagResource.hs",
        "gen/Amazonka/IoTFleetWise/Types.hs",
        "gen/Amazonka/IoTFleetWise/Types/Actuator.hs",
        "gen/Amazonka/IoTFleetWise/Types/Attribute.hs",
        "gen/Amazonka/IoTFleetWise/Types/Branch.hs",
        "gen/Amazonka/IoTFleetWise/Types/CampaignStatus.hs",
        "gen/Amazonka/IoTFleetWise/Types/CampaignSummary.hs",
        "gen/Amazonka/IoTFleetWise/Types/CanDbcDefinition.hs",
        "gen/Amazonka/IoTFleetWise/Types/CanInterface.hs",
        "gen/Amazonka/IoTFleetWise/Types/CanSignal.hs",
        "gen/Amazonka/IoTFleetWise/Types/CloudWatchLogDeliveryOptions.hs",
        "gen/Amazonka/IoTFleetWise/Types/CollectionScheme.hs",
        "gen/Amazonka/IoTFleetWise/Types/Compression.hs",
        "gen/Amazonka/IoTFleetWise/Types/ConditionBasedCollectionScheme.hs",
        "gen/Amazonka/IoTFleetWise/Types/CreateVehicleError.hs",
        "gen/Amazonka/IoTFleetWise/Types/CreateVehicleRequestItem.hs",
        "gen/Amazonka/IoTFleetWise/Types/CreateVehicleResponseItem.hs",
        "gen/Amazonka/IoTFleetWise/Types/DecoderManifestSummary.hs",
        "gen/Amazonka/IoTFleetWise/Types/DiagnosticsMode.hs",
        "gen/Amazonka/IoTFleetWise/Types/FleetSummary.hs",
        "gen/Amazonka/IoTFleetWise/Types/FormattedVss.hs",
        "gen/Amazonka/IoTFleetWise/Types/IamRegistrationResponse.hs",
        "gen/Amazonka/IoTFleetWise/Types/IamResources.hs",
        "gen/Amazonka/IoTFleetWise/Types/LogType.hs",
        "gen/Amazonka/IoTFleetWise/Types/ManifestStatus.hs",
        "gen/Amazonka/IoTFleetWise/Types/ModelManifestSummary.hs",
        "gen/Amazonka/IoTFleetWise/Types/NetworkFileDefinition.hs",
        "gen/Amazonka/IoTFleetWise/Types/NetworkInterface.hs",
        "gen/Amazonka/IoTFleetWise/Types/NetworkInterfaceType.hs",
        "gen/Amazonka/IoTFleetWise/Types/Node.hs",
        "gen/Amazonka/IoTFleetWise/Types/NodeCounts.hs",
        "gen/Amazonka/IoTFleetWise/Types/NodeDataType.hs",
        "gen/Amazonka/IoTFleetWise/Types/ObdInterface.hs",
        "gen/Amazonka/IoTFleetWise/Types/ObdSignal.hs",
        "gen/Amazonka/IoTFleetWise/Types/RegistrationStatus.hs",
        "gen/Amazonka/IoTFleetWise/Types/Sensor.hs",
        "gen/Amazonka/IoTFleetWise/Types/SignalCatalogSummary.hs",
        "gen/Amazonka/IoTFleetWise/Types/SignalDecoder.hs",
        "gen/Amazonka/IoTFleetWise/Types/SignalDecoderType.hs",
        "gen/Amazonka/IoTFleetWise/Types/SignalInformation.hs",
        "gen/Amazonka/IoTFleetWise/Types/SpoolingMode.hs",
        "gen/Amazonka/IoTFleetWise/Types/Tag.hs",
        "gen/Amazonka/IoTFleetWise/Types/TimeBasedCollectionScheme.hs",
        "gen/Amazonka/IoTFleetWise/Types/TimestreamRegistrationResponse.hs",
        "gen/Amazonka/IoTFleetWise/Types/TimestreamResources.hs",
        "gen/Amazonka/IoTFleetWise/Types/TriggerMode.hs",
        "gen/Amazonka/IoTFleetWise/Types/UpdateCampaignAction.hs",
        "gen/Amazonka/IoTFleetWise/Types/UpdateMode.hs",
        "gen/Amazonka/IoTFleetWise/Types/UpdateVehicleError.hs",
        "gen/Amazonka/IoTFleetWise/Types/UpdateVehicleRequestItem.hs",
        "gen/Amazonka/IoTFleetWise/Types/UpdateVehicleResponseItem.hs",
        "gen/Amazonka/IoTFleetWise/Types/VehicleAssociationBehavior.hs",
        "gen/Amazonka/IoTFleetWise/Types/VehicleState.hs",
        "gen/Amazonka/IoTFleetWise/Types/VehicleStatus.hs",
        "gen/Amazonka/IoTFleetWise/Types/VehicleSummary.hs",
        "gen/Amazonka/IoTFleetWise/UntagResource.hs",
        "gen/Amazonka/IoTFleetWise/UpdateCampaign.hs",
        "gen/Amazonka/IoTFleetWise/UpdateDecoderManifest.hs",
        "gen/Amazonka/IoTFleetWise/UpdateFleet.hs",
        "gen/Amazonka/IoTFleetWise/UpdateModelManifest.hs",
        "gen/Amazonka/IoTFleetWise/UpdateSignalCatalog.hs",
        "gen/Amazonka/IoTFleetWise/UpdateVehicle.hs",
        "gen/Amazonka/IoTFleetWise/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_iotfleetwise=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-iotfleetwise/amazonka-iotfleetwise.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-iotfleetwise-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/IoTFleetWise.hs",
        "test/Test/Amazonka/IoTFleetWise.hs",
        "test/Test/Amazonka/IoTFleetWise/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_iotfleetwise=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-iotfleetwise",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
