load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-iot-roborunner/amazonka-iot-roborunner.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-iot-roborunner",
    srcs = [
        "gen/Amazonka/IoTRoboRunner.hs",
        "gen/Amazonka/IoTRoboRunner/CreateDestination.hs",
        "gen/Amazonka/IoTRoboRunner/CreateSite.hs",
        "gen/Amazonka/IoTRoboRunner/CreateWorker.hs",
        "gen/Amazonka/IoTRoboRunner/CreateWorkerFleet.hs",
        "gen/Amazonka/IoTRoboRunner/DeleteDestination.hs",
        "gen/Amazonka/IoTRoboRunner/DeleteSite.hs",
        "gen/Amazonka/IoTRoboRunner/DeleteWorker.hs",
        "gen/Amazonka/IoTRoboRunner/DeleteWorkerFleet.hs",
        "gen/Amazonka/IoTRoboRunner/GetDestination.hs",
        "gen/Amazonka/IoTRoboRunner/GetSite.hs",
        "gen/Amazonka/IoTRoboRunner/GetWorker.hs",
        "gen/Amazonka/IoTRoboRunner/GetWorkerFleet.hs",
        "gen/Amazonka/IoTRoboRunner/Lens.hs",
        "gen/Amazonka/IoTRoboRunner/ListDestinations.hs",
        "gen/Amazonka/IoTRoboRunner/ListSites.hs",
        "gen/Amazonka/IoTRoboRunner/ListWorkerFleets.hs",
        "gen/Amazonka/IoTRoboRunner/ListWorkers.hs",
        "gen/Amazonka/IoTRoboRunner/Types.hs",
        "gen/Amazonka/IoTRoboRunner/Types/CartesianCoordinates.hs",
        "gen/Amazonka/IoTRoboRunner/Types/Destination.hs",
        "gen/Amazonka/IoTRoboRunner/Types/DestinationState.hs",
        "gen/Amazonka/IoTRoboRunner/Types/Orientation.hs",
        "gen/Amazonka/IoTRoboRunner/Types/PositionCoordinates.hs",
        "gen/Amazonka/IoTRoboRunner/Types/Site.hs",
        "gen/Amazonka/IoTRoboRunner/Types/VendorProperties.hs",
        "gen/Amazonka/IoTRoboRunner/Types/Worker.hs",
        "gen/Amazonka/IoTRoboRunner/Types/WorkerFleet.hs",
        "gen/Amazonka/IoTRoboRunner/UpdateDestination.hs",
        "gen/Amazonka/IoTRoboRunner/UpdateSite.hs",
        "gen/Amazonka/IoTRoboRunner/UpdateWorker.hs",
        "gen/Amazonka/IoTRoboRunner/UpdateWorkerFleet.hs",
        "gen/Amazonka/IoTRoboRunner/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_iot_roborunner=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-iot-roborunner/amazonka-iot-roborunner.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-iot-roborunner-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/IoTRoboRunner.hs",
        "test/Test/Amazonka/IoTRoboRunner.hs",
        "test/Test/Amazonka/IoTRoboRunner/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_iot_roborunner=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-iot-roborunner",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
