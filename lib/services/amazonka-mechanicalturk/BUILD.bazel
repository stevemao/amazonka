load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-mechanicalturk/amazonka-mechanicalturk.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-mechanicalturk",
    srcs = [
        "gen/Amazonka/MechanicalTurk.hs",
        "gen/Amazonka/MechanicalTurk/AcceptQualificationRequest.hs",
        "gen/Amazonka/MechanicalTurk/ApproveAssignment.hs",
        "gen/Amazonka/MechanicalTurk/AssociateQualificationWithWorker.hs",
        "gen/Amazonka/MechanicalTurk/CreateAdditionalAssignmentsForHIT.hs",
        "gen/Amazonka/MechanicalTurk/CreateHIT.hs",
        "gen/Amazonka/MechanicalTurk/CreateHITType.hs",
        "gen/Amazonka/MechanicalTurk/CreateHITWithHITType.hs",
        "gen/Amazonka/MechanicalTurk/CreateQualificationType.hs",
        "gen/Amazonka/MechanicalTurk/CreateWorkerBlock.hs",
        "gen/Amazonka/MechanicalTurk/DeleteHIT.hs",
        "gen/Amazonka/MechanicalTurk/DeleteQualificationType.hs",
        "gen/Amazonka/MechanicalTurk/DeleteWorkerBlock.hs",
        "gen/Amazonka/MechanicalTurk/DisassociateQualificationFromWorker.hs",
        "gen/Amazonka/MechanicalTurk/GetAccountBalance.hs",
        "gen/Amazonka/MechanicalTurk/GetAssignment.hs",
        "gen/Amazonka/MechanicalTurk/GetFileUploadURL.hs",
        "gen/Amazonka/MechanicalTurk/GetHIT.hs",
        "gen/Amazonka/MechanicalTurk/GetQualificationScore.hs",
        "gen/Amazonka/MechanicalTurk/GetQualificationType.hs",
        "gen/Amazonka/MechanicalTurk/Lens.hs",
        "gen/Amazonka/MechanicalTurk/ListAssignmentsForHIT.hs",
        "gen/Amazonka/MechanicalTurk/ListBonusPayments.hs",
        "gen/Amazonka/MechanicalTurk/ListHITs.hs",
        "gen/Amazonka/MechanicalTurk/ListHITsForQualificationType.hs",
        "gen/Amazonka/MechanicalTurk/ListQualificationRequests.hs",
        "gen/Amazonka/MechanicalTurk/ListQualificationTypes.hs",
        "gen/Amazonka/MechanicalTurk/ListReviewPolicyResultsForHIT.hs",
        "gen/Amazonka/MechanicalTurk/ListReviewableHITs.hs",
        "gen/Amazonka/MechanicalTurk/ListWorkerBlocks.hs",
        "gen/Amazonka/MechanicalTurk/ListWorkersWithQualificationType.hs",
        "gen/Amazonka/MechanicalTurk/NotifyWorkers.hs",
        "gen/Amazonka/MechanicalTurk/RejectAssignment.hs",
        "gen/Amazonka/MechanicalTurk/RejectQualificationRequest.hs",
        "gen/Amazonka/MechanicalTurk/SendBonus.hs",
        "gen/Amazonka/MechanicalTurk/SendTestEventNotification.hs",
        "gen/Amazonka/MechanicalTurk/Types.hs",
        "gen/Amazonka/MechanicalTurk/Types/Assignment.hs",
        "gen/Amazonka/MechanicalTurk/Types/AssignmentStatus.hs",
        "gen/Amazonka/MechanicalTurk/Types/BonusPayment.hs",
        "gen/Amazonka/MechanicalTurk/Types/Comparator.hs",
        "gen/Amazonka/MechanicalTurk/Types/EventType.hs",
        "gen/Amazonka/MechanicalTurk/Types/HIT.hs",
        "gen/Amazonka/MechanicalTurk/Types/HITAccessActions.hs",
        "gen/Amazonka/MechanicalTurk/Types/HITLayoutParameter.hs",
        "gen/Amazonka/MechanicalTurk/Types/HITReviewStatus.hs",
        "gen/Amazonka/MechanicalTurk/Types/HITStatus.hs",
        "gen/Amazonka/MechanicalTurk/Types/Locale.hs",
        "gen/Amazonka/MechanicalTurk/Types/NotificationSpecification.hs",
        "gen/Amazonka/MechanicalTurk/Types/NotificationTransport.hs",
        "gen/Amazonka/MechanicalTurk/Types/NotifyWorkersFailureCode.hs",
        "gen/Amazonka/MechanicalTurk/Types/NotifyWorkersFailureStatus.hs",
        "gen/Amazonka/MechanicalTurk/Types/ParameterMapEntry.hs",
        "gen/Amazonka/MechanicalTurk/Types/PolicyParameter.hs",
        "gen/Amazonka/MechanicalTurk/Types/Qualification.hs",
        "gen/Amazonka/MechanicalTurk/Types/QualificationRequest.hs",
        "gen/Amazonka/MechanicalTurk/Types/QualificationRequirement.hs",
        "gen/Amazonka/MechanicalTurk/Types/QualificationStatus.hs",
        "gen/Amazonka/MechanicalTurk/Types/QualificationType.hs",
        "gen/Amazonka/MechanicalTurk/Types/QualificationTypeStatus.hs",
        "gen/Amazonka/MechanicalTurk/Types/ReviewActionDetail.hs",
        "gen/Amazonka/MechanicalTurk/Types/ReviewActionStatus.hs",
        "gen/Amazonka/MechanicalTurk/Types/ReviewPolicy.hs",
        "gen/Amazonka/MechanicalTurk/Types/ReviewPolicyLevel.hs",
        "gen/Amazonka/MechanicalTurk/Types/ReviewReport.hs",
        "gen/Amazonka/MechanicalTurk/Types/ReviewResultDetail.hs",
        "gen/Amazonka/MechanicalTurk/Types/ReviewableHITStatus.hs",
        "gen/Amazonka/MechanicalTurk/Types/WorkerBlock.hs",
        "gen/Amazonka/MechanicalTurk/UpdateExpirationForHIT.hs",
        "gen/Amazonka/MechanicalTurk/UpdateHITReviewStatus.hs",
        "gen/Amazonka/MechanicalTurk/UpdateHITTypeOfHIT.hs",
        "gen/Amazonka/MechanicalTurk/UpdateNotificationSettings.hs",
        "gen/Amazonka/MechanicalTurk/UpdateQualificationType.hs",
        "gen/Amazonka/MechanicalTurk/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_mechanicalturk=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-mechanicalturk/amazonka-mechanicalturk.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-mechanicalturk-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/MechanicalTurk.hs",
        "test/Test/Amazonka/MechanicalTurk.hs",
        "test/Test/Amazonka/MechanicalTurk/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_mechanicalturk=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-mechanicalturk",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
