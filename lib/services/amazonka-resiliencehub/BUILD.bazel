load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-resiliencehub/amazonka-resiliencehub.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-resiliencehub",
    srcs = [
        "gen/Amazonka/ResilienceHub.hs",
        "gen/Amazonka/ResilienceHub/AddDraftAppVersionResourceMappings.hs",
        "gen/Amazonka/ResilienceHub/CreateApp.hs",
        "gen/Amazonka/ResilienceHub/CreateRecommendationTemplate.hs",
        "gen/Amazonka/ResilienceHub/CreateResiliencyPolicy.hs",
        "gen/Amazonka/ResilienceHub/DeleteApp.hs",
        "gen/Amazonka/ResilienceHub/DeleteAppAssessment.hs",
        "gen/Amazonka/ResilienceHub/DeleteRecommendationTemplate.hs",
        "gen/Amazonka/ResilienceHub/DeleteResiliencyPolicy.hs",
        "gen/Amazonka/ResilienceHub/DescribeApp.hs",
        "gen/Amazonka/ResilienceHub/DescribeAppAssessment.hs",
        "gen/Amazonka/ResilienceHub/DescribeAppVersionResourcesResolutionStatus.hs",
        "gen/Amazonka/ResilienceHub/DescribeAppVersionTemplate.hs",
        "gen/Amazonka/ResilienceHub/DescribeDraftAppVersionResourcesImportStatus.hs",
        "gen/Amazonka/ResilienceHub/DescribeResiliencyPolicy.hs",
        "gen/Amazonka/ResilienceHub/ImportResourcesToDraftAppVersion.hs",
        "gen/Amazonka/ResilienceHub/Lens.hs",
        "gen/Amazonka/ResilienceHub/ListAlarmRecommendations.hs",
        "gen/Amazonka/ResilienceHub/ListAppAssessments.hs",
        "gen/Amazonka/ResilienceHub/ListAppComponentCompliances.hs",
        "gen/Amazonka/ResilienceHub/ListAppComponentRecommendations.hs",
        "gen/Amazonka/ResilienceHub/ListAppVersionResourceMappings.hs",
        "gen/Amazonka/ResilienceHub/ListAppVersionResources.hs",
        "gen/Amazonka/ResilienceHub/ListAppVersions.hs",
        "gen/Amazonka/ResilienceHub/ListApps.hs",
        "gen/Amazonka/ResilienceHub/ListRecommendationTemplates.hs",
        "gen/Amazonka/ResilienceHub/ListResiliencyPolicies.hs",
        "gen/Amazonka/ResilienceHub/ListSopRecommendations.hs",
        "gen/Amazonka/ResilienceHub/ListSuggestedResiliencyPolicies.hs",
        "gen/Amazonka/ResilienceHub/ListTagsForResource.hs",
        "gen/Amazonka/ResilienceHub/ListTestRecommendations.hs",
        "gen/Amazonka/ResilienceHub/ListUnsupportedAppVersionResources.hs",
        "gen/Amazonka/ResilienceHub/PublishAppVersion.hs",
        "gen/Amazonka/ResilienceHub/PutDraftAppVersionTemplate.hs",
        "gen/Amazonka/ResilienceHub/RemoveDraftAppVersionResourceMappings.hs",
        "gen/Amazonka/ResilienceHub/ResolveAppVersionResources.hs",
        "gen/Amazonka/ResilienceHub/StartAppAssessment.hs",
        "gen/Amazonka/ResilienceHub/TagResource.hs",
        "gen/Amazonka/ResilienceHub/Types.hs",
        "gen/Amazonka/ResilienceHub/Types/AlarmRecommendation.hs",
        "gen/Amazonka/ResilienceHub/Types/AlarmType.hs",
        "gen/Amazonka/ResilienceHub/Types/App.hs",
        "gen/Amazonka/ResilienceHub/Types/AppAssessment.hs",
        "gen/Amazonka/ResilienceHub/Types/AppAssessmentScheduleType.hs",
        "gen/Amazonka/ResilienceHub/Types/AppAssessmentSummary.hs",
        "gen/Amazonka/ResilienceHub/Types/AppComplianceStatusType.hs",
        "gen/Amazonka/ResilienceHub/Types/AppComponent.hs",
        "gen/Amazonka/ResilienceHub/Types/AppComponentCompliance.hs",
        "gen/Amazonka/ResilienceHub/Types/AppStatusType.hs",
        "gen/Amazonka/ResilienceHub/Types/AppSummary.hs",
        "gen/Amazonka/ResilienceHub/Types/AppVersionSummary.hs",
        "gen/Amazonka/ResilienceHub/Types/AssessmentInvoker.hs",
        "gen/Amazonka/ResilienceHub/Types/AssessmentStatus.hs",
        "gen/Amazonka/ResilienceHub/Types/ComplianceStatus.hs",
        "gen/Amazonka/ResilienceHub/Types/ComponentRecommendation.hs",
        "gen/Amazonka/ResilienceHub/Types/ConfigRecommendation.hs",
        "gen/Amazonka/ResilienceHub/Types/ConfigRecommendationOptimizationType.hs",
        "gen/Amazonka/ResilienceHub/Types/Cost.hs",
        "gen/Amazonka/ResilienceHub/Types/CostFrequency.hs",
        "gen/Amazonka/ResilienceHub/Types/DataLocationConstraint.hs",
        "gen/Amazonka/ResilienceHub/Types/DisruptionCompliance.hs",
        "gen/Amazonka/ResilienceHub/Types/DisruptionType.hs",
        "gen/Amazonka/ResilienceHub/Types/EstimatedCostTier.hs",
        "gen/Amazonka/ResilienceHub/Types/FailurePolicy.hs",
        "gen/Amazonka/ResilienceHub/Types/HaArchitecture.hs",
        "gen/Amazonka/ResilienceHub/Types/LogicalResourceId.hs",
        "gen/Amazonka/ResilienceHub/Types/PhysicalIdentifierType.hs",
        "gen/Amazonka/ResilienceHub/Types/PhysicalResource.hs",
        "gen/Amazonka/ResilienceHub/Types/PhysicalResourceId.hs",
        "gen/Amazonka/ResilienceHub/Types/RecommendationComplianceStatus.hs",
        "gen/Amazonka/ResilienceHub/Types/RecommendationDisruptionCompliance.hs",
        "gen/Amazonka/ResilienceHub/Types/RecommendationItem.hs",
        "gen/Amazonka/ResilienceHub/Types/RecommendationTemplate.hs",
        "gen/Amazonka/ResilienceHub/Types/RecommendationTemplateStatus.hs",
        "gen/Amazonka/ResilienceHub/Types/RenderRecommendationType.hs",
        "gen/Amazonka/ResilienceHub/Types/ResiliencyPolicy.hs",
        "gen/Amazonka/ResilienceHub/Types/ResiliencyPolicyTier.hs",
        "gen/Amazonka/ResilienceHub/Types/ResiliencyScore.hs",
        "gen/Amazonka/ResilienceHub/Types/ResourceError.hs",
        "gen/Amazonka/ResilienceHub/Types/ResourceErrorsDetails.hs",
        "gen/Amazonka/ResilienceHub/Types/ResourceImportStatusType.hs",
        "gen/Amazonka/ResilienceHub/Types/ResourceMapping.hs",
        "gen/Amazonka/ResilienceHub/Types/ResourceMappingType.hs",
        "gen/Amazonka/ResilienceHub/Types/ResourceResolutionStatusType.hs",
        "gen/Amazonka/ResilienceHub/Types/S3Location.hs",
        "gen/Amazonka/ResilienceHub/Types/SopRecommendation.hs",
        "gen/Amazonka/ResilienceHub/Types/SopServiceType.hs",
        "gen/Amazonka/ResilienceHub/Types/TemplateFormat.hs",
        "gen/Amazonka/ResilienceHub/Types/TerraformSource.hs",
        "gen/Amazonka/ResilienceHub/Types/TestRecommendation.hs",
        "gen/Amazonka/ResilienceHub/Types/TestRisk.hs",
        "gen/Amazonka/ResilienceHub/Types/TestType.hs",
        "gen/Amazonka/ResilienceHub/Types/UnsupportedResource.hs",
        "gen/Amazonka/ResilienceHub/UntagResource.hs",
        "gen/Amazonka/ResilienceHub/UpdateApp.hs",
        "gen/Amazonka/ResilienceHub/UpdateResiliencyPolicy.hs",
        "gen/Amazonka/ResilienceHub/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_resiliencehub=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-resiliencehub/amazonka-resiliencehub.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-resiliencehub-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/ResilienceHub.hs",
        "test/Test/Amazonka/ResilienceHub.hs",
        "test/Test/Amazonka/ResilienceHub/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_resiliencehub=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-resiliencehub",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
