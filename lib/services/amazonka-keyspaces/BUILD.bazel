load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-keyspaces/amazonka-keyspaces.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-keyspaces",
    srcs = [
        "gen/Amazonka/KeySpaces.hs",
        "gen/Amazonka/KeySpaces/CreateKeyspace.hs",
        "gen/Amazonka/KeySpaces/CreateTable.hs",
        "gen/Amazonka/KeySpaces/DeleteKeyspace.hs",
        "gen/Amazonka/KeySpaces/DeleteTable.hs",
        "gen/Amazonka/KeySpaces/GetKeyspace.hs",
        "gen/Amazonka/KeySpaces/GetTable.hs",
        "gen/Amazonka/KeySpaces/Lens.hs",
        "gen/Amazonka/KeySpaces/ListKeyspaces.hs",
        "gen/Amazonka/KeySpaces/ListTables.hs",
        "gen/Amazonka/KeySpaces/ListTagsForResource.hs",
        "gen/Amazonka/KeySpaces/RestoreTable.hs",
        "gen/Amazonka/KeySpaces/TagResource.hs",
        "gen/Amazonka/KeySpaces/Types.hs",
        "gen/Amazonka/KeySpaces/Types/CapacitySpecification.hs",
        "gen/Amazonka/KeySpaces/Types/CapacitySpecificationSummary.hs",
        "gen/Amazonka/KeySpaces/Types/ClusteringKey.hs",
        "gen/Amazonka/KeySpaces/Types/ColumnDefinition.hs",
        "gen/Amazonka/KeySpaces/Types/Comment.hs",
        "gen/Amazonka/KeySpaces/Types/EncryptionSpecification.hs",
        "gen/Amazonka/KeySpaces/Types/EncryptionType.hs",
        "gen/Amazonka/KeySpaces/Types/KeyspaceSummary.hs",
        "gen/Amazonka/KeySpaces/Types/PartitionKey.hs",
        "gen/Amazonka/KeySpaces/Types/PointInTimeRecovery.hs",
        "gen/Amazonka/KeySpaces/Types/PointInTimeRecoveryStatus.hs",
        "gen/Amazonka/KeySpaces/Types/PointInTimeRecoverySummary.hs",
        "gen/Amazonka/KeySpaces/Types/SchemaDefinition.hs",
        "gen/Amazonka/KeySpaces/Types/SortOrder.hs",
        "gen/Amazonka/KeySpaces/Types/StaticColumn.hs",
        "gen/Amazonka/KeySpaces/Types/TableStatus.hs",
        "gen/Amazonka/KeySpaces/Types/TableSummary.hs",
        "gen/Amazonka/KeySpaces/Types/Tag.hs",
        "gen/Amazonka/KeySpaces/Types/ThroughputMode.hs",
        "gen/Amazonka/KeySpaces/Types/TimeToLive.hs",
        "gen/Amazonka/KeySpaces/Types/TimeToLiveStatus.hs",
        "gen/Amazonka/KeySpaces/UntagResource.hs",
        "gen/Amazonka/KeySpaces/UpdateTable.hs",
        "gen/Amazonka/KeySpaces/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_keyspaces=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-keyspaces/amazonka-keyspaces.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-keyspaces-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/KeySpaces.hs",
        "test/Test/Amazonka/KeySpaces.hs",
        "test/Test/Amazonka/KeySpaces/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_keyspaces=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-keyspaces",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
