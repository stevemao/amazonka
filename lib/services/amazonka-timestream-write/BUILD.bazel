load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-timestream-write/amazonka-timestream-write.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-timestream-write",
    srcs = [
        "gen/Amazonka/TimeStreamWrite.hs",
        "gen/Amazonka/TimeStreamWrite/CreateDatabase.hs",
        "gen/Amazonka/TimeStreamWrite/CreateTable.hs",
        "gen/Amazonka/TimeStreamWrite/DeleteDatabase.hs",
        "gen/Amazonka/TimeStreamWrite/DeleteTable.hs",
        "gen/Amazonka/TimeStreamWrite/DescribeDatabase.hs",
        "gen/Amazonka/TimeStreamWrite/DescribeEndpoints.hs",
        "gen/Amazonka/TimeStreamWrite/DescribeTable.hs",
        "gen/Amazonka/TimeStreamWrite/Lens.hs",
        "gen/Amazonka/TimeStreamWrite/ListDatabases.hs",
        "gen/Amazonka/TimeStreamWrite/ListTables.hs",
        "gen/Amazonka/TimeStreamWrite/ListTagsForResource.hs",
        "gen/Amazonka/TimeStreamWrite/TagResource.hs",
        "gen/Amazonka/TimeStreamWrite/Types.hs",
        "gen/Amazonka/TimeStreamWrite/Types/Database.hs",
        "gen/Amazonka/TimeStreamWrite/Types/Dimension.hs",
        "gen/Amazonka/TimeStreamWrite/Types/DimensionValueType.hs",
        "gen/Amazonka/TimeStreamWrite/Types/Endpoint.hs",
        "gen/Amazonka/TimeStreamWrite/Types/MagneticStoreRejectedDataLocation.hs",
        "gen/Amazonka/TimeStreamWrite/Types/MagneticStoreWriteProperties.hs",
        "gen/Amazonka/TimeStreamWrite/Types/MeasureValue.hs",
        "gen/Amazonka/TimeStreamWrite/Types/MeasureValueType.hs",
        "gen/Amazonka/TimeStreamWrite/Types/Record.hs",
        "gen/Amazonka/TimeStreamWrite/Types/RecordsIngested.hs",
        "gen/Amazonka/TimeStreamWrite/Types/RetentionProperties.hs",
        "gen/Amazonka/TimeStreamWrite/Types/S3Configuration.hs",
        "gen/Amazonka/TimeStreamWrite/Types/S3EncryptionOption.hs",
        "gen/Amazonka/TimeStreamWrite/Types/Table.hs",
        "gen/Amazonka/TimeStreamWrite/Types/TableStatus.hs",
        "gen/Amazonka/TimeStreamWrite/Types/Tag.hs",
        "gen/Amazonka/TimeStreamWrite/Types/TimeUnit.hs",
        "gen/Amazonka/TimeStreamWrite/UntagResource.hs",
        "gen/Amazonka/TimeStreamWrite/UpdateDatabase.hs",
        "gen/Amazonka/TimeStreamWrite/UpdateTable.hs",
        "gen/Amazonka/TimeStreamWrite/Waiters.hs",
        "gen/Amazonka/TimeStreamWrite/WriteRecords.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_timestream_write=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-timestream-write/amazonka-timestream-write.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-timestream-write-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/TimeStreamWrite.hs",
        "test/Test/Amazonka/TimeStreamWrite.hs",
        "test/Test/Amazonka/TimeStreamWrite/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_timestream_write=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-timestream-write",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
