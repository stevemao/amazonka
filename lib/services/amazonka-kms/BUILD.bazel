load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-kms/amazonka-kms.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-kms",
    srcs = [
        "gen/Amazonka/KMS.hs",
        "gen/Amazonka/KMS/CancelKeyDeletion.hs",
        "gen/Amazonka/KMS/ConnectCustomKeyStore.hs",
        "gen/Amazonka/KMS/CreateAlias.hs",
        "gen/Amazonka/KMS/CreateCustomKeyStore.hs",
        "gen/Amazonka/KMS/CreateGrant.hs",
        "gen/Amazonka/KMS/CreateKey.hs",
        "gen/Amazonka/KMS/Decrypt.hs",
        "gen/Amazonka/KMS/DeleteAlias.hs",
        "gen/Amazonka/KMS/DeleteCustomKeyStore.hs",
        "gen/Amazonka/KMS/DeleteImportedKeyMaterial.hs",
        "gen/Amazonka/KMS/DescribeCustomKeyStores.hs",
        "gen/Amazonka/KMS/DescribeKey.hs",
        "gen/Amazonka/KMS/DisableKey.hs",
        "gen/Amazonka/KMS/DisableKeyRotation.hs",
        "gen/Amazonka/KMS/DisconnectCustomKeyStore.hs",
        "gen/Amazonka/KMS/EnableKey.hs",
        "gen/Amazonka/KMS/EnableKeyRotation.hs",
        "gen/Amazonka/KMS/Encrypt.hs",
        "gen/Amazonka/KMS/GenerateDataKey.hs",
        "gen/Amazonka/KMS/GenerateDataKeyPair.hs",
        "gen/Amazonka/KMS/GenerateDataKeyPairWithoutPlaintext.hs",
        "gen/Amazonka/KMS/GenerateDataKeyWithoutPlaintext.hs",
        "gen/Amazonka/KMS/GenerateMac.hs",
        "gen/Amazonka/KMS/GenerateRandom.hs",
        "gen/Amazonka/KMS/GetKeyPolicy.hs",
        "gen/Amazonka/KMS/GetKeyRotationStatus.hs",
        "gen/Amazonka/KMS/GetParametersForImport.hs",
        "gen/Amazonka/KMS/GetPublicKey.hs",
        "gen/Amazonka/KMS/ImportKeyMaterial.hs",
        "gen/Amazonka/KMS/Lens.hs",
        "gen/Amazonka/KMS/ListAliases.hs",
        "gen/Amazonka/KMS/ListGrants.hs",
        "gen/Amazonka/KMS/ListKeyPolicies.hs",
        "gen/Amazonka/KMS/ListKeys.hs",
        "gen/Amazonka/KMS/ListResourceTags.hs",
        "gen/Amazonka/KMS/ListRetirableGrants.hs",
        "gen/Amazonka/KMS/PutKeyPolicy.hs",
        "gen/Amazonka/KMS/ReEncrypt.hs",
        "gen/Amazonka/KMS/ReplicateKey.hs",
        "gen/Amazonka/KMS/RetireGrant.hs",
        "gen/Amazonka/KMS/RevokeGrant.hs",
        "gen/Amazonka/KMS/ScheduleKeyDeletion.hs",
        "gen/Amazonka/KMS/Sign.hs",
        "gen/Amazonka/KMS/TagResource.hs",
        "gen/Amazonka/KMS/Types.hs",
        "gen/Amazonka/KMS/Types/AlgorithmSpec.hs",
        "gen/Amazonka/KMS/Types/AliasListEntry.hs",
        "gen/Amazonka/KMS/Types/ConnectionErrorCodeType.hs",
        "gen/Amazonka/KMS/Types/ConnectionStateType.hs",
        "gen/Amazonka/KMS/Types/CustomKeyStoreType.hs",
        "gen/Amazonka/KMS/Types/CustomKeyStoresListEntry.hs",
        "gen/Amazonka/KMS/Types/CustomerMasterKeySpec.hs",
        "gen/Amazonka/KMS/Types/DataKeyPairSpec.hs",
        "gen/Amazonka/KMS/Types/DataKeySpec.hs",
        "gen/Amazonka/KMS/Types/EncryptionAlgorithmSpec.hs",
        "gen/Amazonka/KMS/Types/ExpirationModelType.hs",
        "gen/Amazonka/KMS/Types/GrantConstraints.hs",
        "gen/Amazonka/KMS/Types/GrantListEntry.hs",
        "gen/Amazonka/KMS/Types/GrantOperation.hs",
        "gen/Amazonka/KMS/Types/KeyListEntry.hs",
        "gen/Amazonka/KMS/Types/KeyManagerType.hs",
        "gen/Amazonka/KMS/Types/KeyMetadata.hs",
        "gen/Amazonka/KMS/Types/KeySpec.hs",
        "gen/Amazonka/KMS/Types/KeyState.hs",
        "gen/Amazonka/KMS/Types/KeyUsageType.hs",
        "gen/Amazonka/KMS/Types/ListGrantsResponse.hs",
        "gen/Amazonka/KMS/Types/MacAlgorithmSpec.hs",
        "gen/Amazonka/KMS/Types/MessageType.hs",
        "gen/Amazonka/KMS/Types/MultiRegionConfiguration.hs",
        "gen/Amazonka/KMS/Types/MultiRegionKey.hs",
        "gen/Amazonka/KMS/Types/MultiRegionKeyType.hs",
        "gen/Amazonka/KMS/Types/OriginType.hs",
        "gen/Amazonka/KMS/Types/SigningAlgorithmSpec.hs",
        "gen/Amazonka/KMS/Types/Tag.hs",
        "gen/Amazonka/KMS/Types/WrappingKeySpec.hs",
        "gen/Amazonka/KMS/Types/XksKeyConfigurationType.hs",
        "gen/Amazonka/KMS/Types/XksProxyAuthenticationCredentialType.hs",
        "gen/Amazonka/KMS/Types/XksProxyConfigurationType.hs",
        "gen/Amazonka/KMS/Types/XksProxyConnectivityType.hs",
        "gen/Amazonka/KMS/UntagResource.hs",
        "gen/Amazonka/KMS/UpdateAlias.hs",
        "gen/Amazonka/KMS/UpdateCustomKeyStore.hs",
        "gen/Amazonka/KMS/UpdateKeyDescription.hs",
        "gen/Amazonka/KMS/UpdatePrimaryRegion.hs",
        "gen/Amazonka/KMS/Verify.hs",
        "gen/Amazonka/KMS/VerifyMac.hs",
        "gen/Amazonka/KMS/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_kms=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-kms/amazonka-kms.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-kms-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/KMS.hs",
        "test/Test/Amazonka/KMS.hs",
        "test/Test/Amazonka/KMS/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_kms=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-kms",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
