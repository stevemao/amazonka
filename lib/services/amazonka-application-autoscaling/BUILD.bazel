load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-application-autoscaling/amazonka-application-autoscaling.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-application-autoscaling",
    srcs = [
        "gen/Amazonka/ApplicationAutoScaling.hs",
        "gen/Amazonka/ApplicationAutoScaling/DeleteScalingPolicy.hs",
        "gen/Amazonka/ApplicationAutoScaling/DeleteScheduledAction.hs",
        "gen/Amazonka/ApplicationAutoScaling/DeregisterScalableTarget.hs",
        "gen/Amazonka/ApplicationAutoScaling/DescribeScalableTargets.hs",
        "gen/Amazonka/ApplicationAutoScaling/DescribeScalingActivities.hs",
        "gen/Amazonka/ApplicationAutoScaling/DescribeScalingPolicies.hs",
        "gen/Amazonka/ApplicationAutoScaling/DescribeScheduledActions.hs",
        "gen/Amazonka/ApplicationAutoScaling/Lens.hs",
        "gen/Amazonka/ApplicationAutoScaling/PutScalingPolicy.hs",
        "gen/Amazonka/ApplicationAutoScaling/PutScheduledAction.hs",
        "gen/Amazonka/ApplicationAutoScaling/RegisterScalableTarget.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/AdjustmentType.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/Alarm.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/CustomizedMetricSpecification.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/MetricAggregationType.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/MetricDimension.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/MetricStatistic.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/MetricType.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/PolicyType.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/PredefinedMetricSpecification.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/ScalableDimension.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/ScalableTarget.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/ScalableTargetAction.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/ScalingActivity.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/ScalingActivityStatusCode.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/ScalingPolicy.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/ScheduledAction.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/ServiceNamespace.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/StepAdjustment.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/StepScalingPolicyConfiguration.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/SuspendedState.hs",
        "gen/Amazonka/ApplicationAutoScaling/Types/TargetTrackingScalingPolicyConfiguration.hs",
        "gen/Amazonka/ApplicationAutoScaling/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_application_autoscaling=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-application-autoscaling/amazonka-application-autoscaling.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-application-autoscaling-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/ApplicationAutoScaling.hs",
        "test/Test/Amazonka/ApplicationAutoScaling/Internal.hs",
        "test/Test/Amazonka/Gen/ApplicationAutoScaling.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_application_autoscaling=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-application-autoscaling",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
