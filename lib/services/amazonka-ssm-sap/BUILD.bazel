load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-ssm-sap/amazonka-ssm-sap.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-ssm-sap",
    srcs = [
        "gen/Amazonka/SSMSAP.hs",
        "gen/Amazonka/SSMSAP/DeleteResourcePermission.hs",
        "gen/Amazonka/SSMSAP/DeregisterApplication.hs",
        "gen/Amazonka/SSMSAP/GetApplication.hs",
        "gen/Amazonka/SSMSAP/GetComponent.hs",
        "gen/Amazonka/SSMSAP/GetDatabase.hs",
        "gen/Amazonka/SSMSAP/GetOperation.hs",
        "gen/Amazonka/SSMSAP/GetResourcePermission.hs",
        "gen/Amazonka/SSMSAP/Lens.hs",
        "gen/Amazonka/SSMSAP/ListApplications.hs",
        "gen/Amazonka/SSMSAP/ListComponents.hs",
        "gen/Amazonka/SSMSAP/ListDatabases.hs",
        "gen/Amazonka/SSMSAP/ListTagsForResource.hs",
        "gen/Amazonka/SSMSAP/PutResourcePermission.hs",
        "gen/Amazonka/SSMSAP/RegisterApplication.hs",
        "gen/Amazonka/SSMSAP/TagResource.hs",
        "gen/Amazonka/SSMSAP/Types.hs",
        "gen/Amazonka/SSMSAP/Types/Application.hs",
        "gen/Amazonka/SSMSAP/Types/ApplicationCredential.hs",
        "gen/Amazonka/SSMSAP/Types/ApplicationStatus.hs",
        "gen/Amazonka/SSMSAP/Types/ApplicationSummary.hs",
        "gen/Amazonka/SSMSAP/Types/ApplicationType.hs",
        "gen/Amazonka/SSMSAP/Types/Component.hs",
        "gen/Amazonka/SSMSAP/Types/ComponentStatus.hs",
        "gen/Amazonka/SSMSAP/Types/ComponentSummary.hs",
        "gen/Amazonka/SSMSAP/Types/ComponentType.hs",
        "gen/Amazonka/SSMSAP/Types/CredentialType.hs",
        "gen/Amazonka/SSMSAP/Types/Database.hs",
        "gen/Amazonka/SSMSAP/Types/DatabaseStatus.hs",
        "gen/Amazonka/SSMSAP/Types/DatabaseSummary.hs",
        "gen/Amazonka/SSMSAP/Types/DatabaseType.hs",
        "gen/Amazonka/SSMSAP/Types/Host.hs",
        "gen/Amazonka/SSMSAP/Types/HostRole.hs",
        "gen/Amazonka/SSMSAP/Types/Operation.hs",
        "gen/Amazonka/SSMSAP/Types/OperationStatus.hs",
        "gen/Amazonka/SSMSAP/Types/PermissionActionType.hs",
        "gen/Amazonka/SSMSAP/UntagResource.hs",
        "gen/Amazonka/SSMSAP/UpdateApplicationSettings.hs",
        "gen/Amazonka/SSMSAP/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_ssm_sap=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-ssm-sap/amazonka-ssm-sap.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-ssm-sap-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/SSMSAP.hs",
        "test/Test/Amazonka/SSMSAP.hs",
        "test/Test/Amazonka/SSMSAP/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_ssm_sap=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-ssm-sap",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
