load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-dlm/amazonka-dlm.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-dlm",
    srcs = [
        "gen/Amazonka/DLM.hs",
        "gen/Amazonka/DLM/CreateLifecyclePolicy.hs",
        "gen/Amazonka/DLM/DeleteLifecyclePolicy.hs",
        "gen/Amazonka/DLM/GetLifecyclePolicies.hs",
        "gen/Amazonka/DLM/GetLifecyclePolicy.hs",
        "gen/Amazonka/DLM/Lens.hs",
        "gen/Amazonka/DLM/ListTagsForResource.hs",
        "gen/Amazonka/DLM/TagResource.hs",
        "gen/Amazonka/DLM/Types.hs",
        "gen/Amazonka/DLM/Types/Action.hs",
        "gen/Amazonka/DLM/Types/ArchiveRetainRule.hs",
        "gen/Amazonka/DLM/Types/ArchiveRule.hs",
        "gen/Amazonka/DLM/Types/CreateRule.hs",
        "gen/Amazonka/DLM/Types/CrossRegionCopyAction.hs",
        "gen/Amazonka/DLM/Types/CrossRegionCopyDeprecateRule.hs",
        "gen/Amazonka/DLM/Types/CrossRegionCopyRetainRule.hs",
        "gen/Amazonka/DLM/Types/CrossRegionCopyRule.hs",
        "gen/Amazonka/DLM/Types/DeprecateRule.hs",
        "gen/Amazonka/DLM/Types/EncryptionConfiguration.hs",
        "gen/Amazonka/DLM/Types/EventParameters.hs",
        "gen/Amazonka/DLM/Types/EventSource.hs",
        "gen/Amazonka/DLM/Types/EventSourceValues.hs",
        "gen/Amazonka/DLM/Types/EventTypeValues.hs",
        "gen/Amazonka/DLM/Types/FastRestoreRule.hs",
        "gen/Amazonka/DLM/Types/GettablePolicyStateValues.hs",
        "gen/Amazonka/DLM/Types/IntervalUnitValues.hs",
        "gen/Amazonka/DLM/Types/LifecyclePolicy.hs",
        "gen/Amazonka/DLM/Types/LifecyclePolicySummary.hs",
        "gen/Amazonka/DLM/Types/LocationValues.hs",
        "gen/Amazonka/DLM/Types/Parameters.hs",
        "gen/Amazonka/DLM/Types/PolicyDetails.hs",
        "gen/Amazonka/DLM/Types/PolicyTypeValues.hs",
        "gen/Amazonka/DLM/Types/ResourceLocationValues.hs",
        "gen/Amazonka/DLM/Types/ResourceTypeValues.hs",
        "gen/Amazonka/DLM/Types/RetainRule.hs",
        "gen/Amazonka/DLM/Types/RetentionArchiveTier.hs",
        "gen/Amazonka/DLM/Types/RetentionIntervalUnitValues.hs",
        "gen/Amazonka/DLM/Types/Schedule.hs",
        "gen/Amazonka/DLM/Types/SettablePolicyStateValues.hs",
        "gen/Amazonka/DLM/Types/ShareRule.hs",
        "gen/Amazonka/DLM/Types/Tag.hs",
        "gen/Amazonka/DLM/UntagResource.hs",
        "gen/Amazonka/DLM/UpdateLifecyclePolicy.hs",
        "gen/Amazonka/DLM/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_dlm=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-dlm/amazonka-dlm.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-dlm-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/DLM.hs",
        "test/Test/Amazonka/DLM/Internal.hs",
        "test/Test/Amazonka/Gen/DLM.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_dlm=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-dlm",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
