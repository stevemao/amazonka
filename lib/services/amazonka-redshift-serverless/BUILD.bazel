load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-redshift-serverless/amazonka-redshift-serverless.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-redshift-serverless",
    srcs = [
        "gen/Amazonka/RedshiftServerLess.hs",
        "gen/Amazonka/RedshiftServerLess/ConvertRecoveryPointToSnapshot.hs",
        "gen/Amazonka/RedshiftServerLess/CreateEndpointAccess.hs",
        "gen/Amazonka/RedshiftServerLess/CreateNamespace.hs",
        "gen/Amazonka/RedshiftServerLess/CreateSnapshot.hs",
        "gen/Amazonka/RedshiftServerLess/CreateUsageLimit.hs",
        "gen/Amazonka/RedshiftServerLess/CreateWorkgroup.hs",
        "gen/Amazonka/RedshiftServerLess/DeleteEndpointAccess.hs",
        "gen/Amazonka/RedshiftServerLess/DeleteNamespace.hs",
        "gen/Amazonka/RedshiftServerLess/DeleteResourcePolicy.hs",
        "gen/Amazonka/RedshiftServerLess/DeleteSnapshot.hs",
        "gen/Amazonka/RedshiftServerLess/DeleteUsageLimit.hs",
        "gen/Amazonka/RedshiftServerLess/DeleteWorkgroup.hs",
        "gen/Amazonka/RedshiftServerLess/GetCredentials.hs",
        "gen/Amazonka/RedshiftServerLess/GetEndpointAccess.hs",
        "gen/Amazonka/RedshiftServerLess/GetNamespace.hs",
        "gen/Amazonka/RedshiftServerLess/GetRecoveryPoint.hs",
        "gen/Amazonka/RedshiftServerLess/GetResourcePolicy.hs",
        "gen/Amazonka/RedshiftServerLess/GetSnapshot.hs",
        "gen/Amazonka/RedshiftServerLess/GetTableRestoreStatus.hs",
        "gen/Amazonka/RedshiftServerLess/GetUsageLimit.hs",
        "gen/Amazonka/RedshiftServerLess/GetWorkgroup.hs",
        "gen/Amazonka/RedshiftServerLess/Lens.hs",
        "gen/Amazonka/RedshiftServerLess/ListEndpointAccess.hs",
        "gen/Amazonka/RedshiftServerLess/ListNamespaces.hs",
        "gen/Amazonka/RedshiftServerLess/ListRecoveryPoints.hs",
        "gen/Amazonka/RedshiftServerLess/ListSnapshots.hs",
        "gen/Amazonka/RedshiftServerLess/ListTableRestoreStatus.hs",
        "gen/Amazonka/RedshiftServerLess/ListTagsForResource.hs",
        "gen/Amazonka/RedshiftServerLess/ListUsageLimits.hs",
        "gen/Amazonka/RedshiftServerLess/ListWorkgroups.hs",
        "gen/Amazonka/RedshiftServerLess/PutResourcePolicy.hs",
        "gen/Amazonka/RedshiftServerLess/RestoreFromRecoveryPoint.hs",
        "gen/Amazonka/RedshiftServerLess/RestoreFromSnapshot.hs",
        "gen/Amazonka/RedshiftServerLess/RestoreTableFromSnapshot.hs",
        "gen/Amazonka/RedshiftServerLess/TagResource.hs",
        "gen/Amazonka/RedshiftServerLess/Types.hs",
        "gen/Amazonka/RedshiftServerLess/Types/ConfigParameter.hs",
        "gen/Amazonka/RedshiftServerLess/Types/Endpoint.hs",
        "gen/Amazonka/RedshiftServerLess/Types/EndpointAccess.hs",
        "gen/Amazonka/RedshiftServerLess/Types/LogExport.hs",
        "gen/Amazonka/RedshiftServerLess/Types/Namespace.hs",
        "gen/Amazonka/RedshiftServerLess/Types/NamespaceStatus.hs",
        "gen/Amazonka/RedshiftServerLess/Types/NetworkInterface.hs",
        "gen/Amazonka/RedshiftServerLess/Types/RecoveryPoint.hs",
        "gen/Amazonka/RedshiftServerLess/Types/ResourcePolicy.hs",
        "gen/Amazonka/RedshiftServerLess/Types/Snapshot.hs",
        "gen/Amazonka/RedshiftServerLess/Types/SnapshotStatus.hs",
        "gen/Amazonka/RedshiftServerLess/Types/TableRestoreStatus.hs",
        "gen/Amazonka/RedshiftServerLess/Types/Tag.hs",
        "gen/Amazonka/RedshiftServerLess/Types/UsageLimit.hs",
        "gen/Amazonka/RedshiftServerLess/Types/UsageLimitBreachAction.hs",
        "gen/Amazonka/RedshiftServerLess/Types/UsageLimitPeriod.hs",
        "gen/Amazonka/RedshiftServerLess/Types/UsageLimitUsageType.hs",
        "gen/Amazonka/RedshiftServerLess/Types/VpcEndpoint.hs",
        "gen/Amazonka/RedshiftServerLess/Types/VpcSecurityGroupMembership.hs",
        "gen/Amazonka/RedshiftServerLess/Types/Workgroup.hs",
        "gen/Amazonka/RedshiftServerLess/Types/WorkgroupStatus.hs",
        "gen/Amazonka/RedshiftServerLess/UntagResource.hs",
        "gen/Amazonka/RedshiftServerLess/UpdateEndpointAccess.hs",
        "gen/Amazonka/RedshiftServerLess/UpdateNamespace.hs",
        "gen/Amazonka/RedshiftServerLess/UpdateSnapshot.hs",
        "gen/Amazonka/RedshiftServerLess/UpdateUsageLimit.hs",
        "gen/Amazonka/RedshiftServerLess/UpdateWorkgroup.hs",
        "gen/Amazonka/RedshiftServerLess/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_redshift_serverless=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-redshift-serverless/amazonka-redshift-serverless.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-redshift-serverless-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/RedshiftServerLess.hs",
        "test/Test/Amazonka/RedshiftServerLess.hs",
        "test/Test/Amazonka/RedshiftServerLess/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_redshift_serverless=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-redshift-serverless",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
