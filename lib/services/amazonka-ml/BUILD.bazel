load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-ml/amazonka-ml.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-ml",
    srcs = [
        "gen/Amazonka/MachineLearning.hs",
        "gen/Amazonka/MachineLearning/AddTags.hs",
        "gen/Amazonka/MachineLearning/CreateBatchPrediction.hs",
        "gen/Amazonka/MachineLearning/CreateDataSourceFromRDS.hs",
        "gen/Amazonka/MachineLearning/CreateDataSourceFromRedshift.hs",
        "gen/Amazonka/MachineLearning/CreateDataSourceFromS3.hs",
        "gen/Amazonka/MachineLearning/CreateEvaluation.hs",
        "gen/Amazonka/MachineLearning/CreateMLModel.hs",
        "gen/Amazonka/MachineLearning/CreateRealtimeEndpoint.hs",
        "gen/Amazonka/MachineLearning/DeleteBatchPrediction.hs",
        "gen/Amazonka/MachineLearning/DeleteDataSource.hs",
        "gen/Amazonka/MachineLearning/DeleteEvaluation.hs",
        "gen/Amazonka/MachineLearning/DeleteMLModel.hs",
        "gen/Amazonka/MachineLearning/DeleteRealtimeEndpoint.hs",
        "gen/Amazonka/MachineLearning/DeleteTags.hs",
        "gen/Amazonka/MachineLearning/DescribeBatchPredictions.hs",
        "gen/Amazonka/MachineLearning/DescribeDataSources.hs",
        "gen/Amazonka/MachineLearning/DescribeEvaluations.hs",
        "gen/Amazonka/MachineLearning/DescribeMLModels.hs",
        "gen/Amazonka/MachineLearning/DescribeTags.hs",
        "gen/Amazonka/MachineLearning/GetBatchPrediction.hs",
        "gen/Amazonka/MachineLearning/GetDataSource.hs",
        "gen/Amazonka/MachineLearning/GetEvaluation.hs",
        "gen/Amazonka/MachineLearning/GetMLModel.hs",
        "gen/Amazonka/MachineLearning/Lens.hs",
        "gen/Amazonka/MachineLearning/Predict.hs",
        "gen/Amazonka/MachineLearning/Types.hs",
        "gen/Amazonka/MachineLearning/Types/Algorithm.hs",
        "gen/Amazonka/MachineLearning/Types/BatchPrediction.hs",
        "gen/Amazonka/MachineLearning/Types/BatchPredictionFilterVariable.hs",
        "gen/Amazonka/MachineLearning/Types/DataSource.hs",
        "gen/Amazonka/MachineLearning/Types/DataSourceFilterVariable.hs",
        "gen/Amazonka/MachineLearning/Types/DetailsAttributes.hs",
        "gen/Amazonka/MachineLearning/Types/EntityStatus.hs",
        "gen/Amazonka/MachineLearning/Types/Evaluation.hs",
        "gen/Amazonka/MachineLearning/Types/EvaluationFilterVariable.hs",
        "gen/Amazonka/MachineLearning/Types/MLModel.hs",
        "gen/Amazonka/MachineLearning/Types/MLModelFilterVariable.hs",
        "gen/Amazonka/MachineLearning/Types/MLModelType.hs",
        "gen/Amazonka/MachineLearning/Types/PerformanceMetrics.hs",
        "gen/Amazonka/MachineLearning/Types/Prediction.hs",
        "gen/Amazonka/MachineLearning/Types/RDSDataSpec.hs",
        "gen/Amazonka/MachineLearning/Types/RDSDatabase.hs",
        "gen/Amazonka/MachineLearning/Types/RDSDatabaseCredentials.hs",
        "gen/Amazonka/MachineLearning/Types/RDSMetadata.hs",
        "gen/Amazonka/MachineLearning/Types/RealtimeEndpointInfo.hs",
        "gen/Amazonka/MachineLearning/Types/RealtimeEndpointStatus.hs",
        "gen/Amazonka/MachineLearning/Types/RedshiftDataSpec.hs",
        "gen/Amazonka/MachineLearning/Types/RedshiftDatabase.hs",
        "gen/Amazonka/MachineLearning/Types/RedshiftDatabaseCredentials.hs",
        "gen/Amazonka/MachineLearning/Types/RedshiftMetadata.hs",
        "gen/Amazonka/MachineLearning/Types/S3DataSpec.hs",
        "gen/Amazonka/MachineLearning/Types/SortOrder.hs",
        "gen/Amazonka/MachineLearning/Types/Tag.hs",
        "gen/Amazonka/MachineLearning/Types/TaggableResourceType.hs",
        "gen/Amazonka/MachineLearning/UpdateBatchPrediction.hs",
        "gen/Amazonka/MachineLearning/UpdateDataSource.hs",
        "gen/Amazonka/MachineLearning/UpdateEvaluation.hs",
        "gen/Amazonka/MachineLearning/UpdateMLModel.hs",
        "gen/Amazonka/MachineLearning/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_ml=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-ml/amazonka-ml.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-ml-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/MachineLearning.hs",
        "test/Test/Amazonka/MachineLearning.hs",
        "test/Test/Amazonka/MachineLearning/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_ml=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-ml",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
