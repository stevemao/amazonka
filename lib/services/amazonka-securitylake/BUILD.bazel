load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-securitylake/amazonka-securitylake.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-securitylake",
    srcs = [
        "gen/Amazonka/SecurityLake.hs",
        "gen/Amazonka/SecurityLake/CreateAwsLogSource.hs",
        "gen/Amazonka/SecurityLake/CreateCustomLogSource.hs",
        "gen/Amazonka/SecurityLake/CreateDatalake.hs",
        "gen/Amazonka/SecurityLake/CreateDatalakeAutoEnable.hs",
        "gen/Amazonka/SecurityLake/CreateDatalakeDelegatedAdmin.hs",
        "gen/Amazonka/SecurityLake/CreateDatalakeExceptionsSubscription.hs",
        "gen/Amazonka/SecurityLake/CreateSubscriber.hs",
        "gen/Amazonka/SecurityLake/CreateSubscriptionNotificationConfiguration.hs",
        "gen/Amazonka/SecurityLake/DeleteAwsLogSource.hs",
        "gen/Amazonka/SecurityLake/DeleteCustomLogSource.hs",
        "gen/Amazonka/SecurityLake/DeleteDatalake.hs",
        "gen/Amazonka/SecurityLake/DeleteDatalakeAutoEnable.hs",
        "gen/Amazonka/SecurityLake/DeleteDatalakeDelegatedAdmin.hs",
        "gen/Amazonka/SecurityLake/DeleteDatalakeExceptionsSubscription.hs",
        "gen/Amazonka/SecurityLake/DeleteSubscriber.hs",
        "gen/Amazonka/SecurityLake/DeleteSubscriptionNotificationConfiguration.hs",
        "gen/Amazonka/SecurityLake/GetDatalake.hs",
        "gen/Amazonka/SecurityLake/GetDatalakeAutoEnable.hs",
        "gen/Amazonka/SecurityLake/GetDatalakeExceptionsExpiry.hs",
        "gen/Amazonka/SecurityLake/GetDatalakeExceptionsSubscription.hs",
        "gen/Amazonka/SecurityLake/GetDatalakeStatus.hs",
        "gen/Amazonka/SecurityLake/GetSubscriber.hs",
        "gen/Amazonka/SecurityLake/Lens.hs",
        "gen/Amazonka/SecurityLake/ListDatalakeExceptions.hs",
        "gen/Amazonka/SecurityLake/ListLogSources.hs",
        "gen/Amazonka/SecurityLake/ListSubscribers.hs",
        "gen/Amazonka/SecurityLake/Types.hs",
        "gen/Amazonka/SecurityLake/Types/AccessType.hs",
        "gen/Amazonka/SecurityLake/Types/AccountSources.hs",
        "gen/Amazonka/SecurityLake/Types/AutoEnableNewRegionConfiguration.hs",
        "gen/Amazonka/SecurityLake/Types/AwsLogSourceType.hs",
        "gen/Amazonka/SecurityLake/Types/Dimension.hs",
        "gen/Amazonka/SecurityLake/Types/EndpointProtocol.hs",
        "gen/Amazonka/SecurityLake/Types/Failures.hs",
        "gen/Amazonka/SecurityLake/Types/FailuresResponse.hs",
        "gen/Amazonka/SecurityLake/Types/HttpsMethod.hs",
        "gen/Amazonka/SecurityLake/Types/LakeConfigurationRequest.hs",
        "gen/Amazonka/SecurityLake/Types/LakeConfigurationResponse.hs",
        "gen/Amazonka/SecurityLake/Types/LogsStatus.hs",
        "gen/Amazonka/SecurityLake/Types/OcsfEventClass.hs",
        "gen/Amazonka/SecurityLake/Types/ProtocolAndNotificationEndpoint.hs",
        "gen/Amazonka/SecurityLake/Types/Region.hs",
        "gen/Amazonka/SecurityLake/Types/RetentionSetting.hs",
        "gen/Amazonka/SecurityLake/Types/SettingsStatus.hs",
        "gen/Amazonka/SecurityLake/Types/SourceStatus.hs",
        "gen/Amazonka/SecurityLake/Types/SourceType.hs",
        "gen/Amazonka/SecurityLake/Types/StorageClass.hs",
        "gen/Amazonka/SecurityLake/Types/SubscriberResource.hs",
        "gen/Amazonka/SecurityLake/Types/SubscriptionProtocolType.hs",
        "gen/Amazonka/SecurityLake/Types/SubscriptionStatus.hs",
        "gen/Amazonka/SecurityLake/UpdateDatalake.hs",
        "gen/Amazonka/SecurityLake/UpdateDatalakeExceptionsExpiry.hs",
        "gen/Amazonka/SecurityLake/UpdateDatalakeExceptionsSubscription.hs",
        "gen/Amazonka/SecurityLake/UpdateSubscriber.hs",
        "gen/Amazonka/SecurityLake/UpdateSubscriptionNotificationConfiguration.hs",
        "gen/Amazonka/SecurityLake/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_securitylake=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-securitylake/amazonka-securitylake.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-securitylake-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/SecurityLake.hs",
        "test/Test/Amazonka/SecurityLake.hs",
        "test/Test/Amazonka/SecurityLake/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_securitylake=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-securitylake",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
