load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-wellarchitected/amazonka-wellarchitected.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-wellarchitected",
    srcs = [
        "gen/Amazonka/WellArchitected.hs",
        "gen/Amazonka/WellArchitected/AssociateLenses.hs",
        "gen/Amazonka/WellArchitected/CreateLensShare.hs",
        "gen/Amazonka/WellArchitected/CreateLensVersion.hs",
        "gen/Amazonka/WellArchitected/CreateMilestone.hs",
        "gen/Amazonka/WellArchitected/CreateWorkload.hs",
        "gen/Amazonka/WellArchitected/CreateWorkloadShare.hs",
        "gen/Amazonka/WellArchitected/DeleteLens.hs",
        "gen/Amazonka/WellArchitected/DeleteLensShare.hs",
        "gen/Amazonka/WellArchitected/DeleteWorkload.hs",
        "gen/Amazonka/WellArchitected/DeleteWorkloadShare.hs",
        "gen/Amazonka/WellArchitected/DisassociateLenses.hs",
        "gen/Amazonka/WellArchitected/ExportLens.hs",
        "gen/Amazonka/WellArchitected/GetAnswer.hs",
        "gen/Amazonka/WellArchitected/GetLens.hs",
        "gen/Amazonka/WellArchitected/GetLensReview.hs",
        "gen/Amazonka/WellArchitected/GetLensReviewReport.hs",
        "gen/Amazonka/WellArchitected/GetLensVersionDifference.hs",
        "gen/Amazonka/WellArchitected/GetMilestone.hs",
        "gen/Amazonka/WellArchitected/GetWorkload.hs",
        "gen/Amazonka/WellArchitected/ImportLens.hs",
        "gen/Amazonka/WellArchitected/Lens.hs",
        "gen/Amazonka/WellArchitected/ListAnswers.hs",
        "gen/Amazonka/WellArchitected/ListCheckDetails.hs",
        "gen/Amazonka/WellArchitected/ListCheckSummaries.hs",
        "gen/Amazonka/WellArchitected/ListLensReviewImprovements.hs",
        "gen/Amazonka/WellArchitected/ListLensReviews.hs",
        "gen/Amazonka/WellArchitected/ListLensShares.hs",
        "gen/Amazonka/WellArchitected/ListLenses.hs",
        "gen/Amazonka/WellArchitected/ListMilestones.hs",
        "gen/Amazonka/WellArchitected/ListNotifications.hs",
        "gen/Amazonka/WellArchitected/ListShareInvitations.hs",
        "gen/Amazonka/WellArchitected/ListTagsForResource.hs",
        "gen/Amazonka/WellArchitected/ListWorkloadShares.hs",
        "gen/Amazonka/WellArchitected/ListWorkloads.hs",
        "gen/Amazonka/WellArchitected/TagResource.hs",
        "gen/Amazonka/WellArchitected/Types.hs",
        "gen/Amazonka/WellArchitected/Types/AdditionalResourceType.hs",
        "gen/Amazonka/WellArchitected/Types/AdditionalResources.hs",
        "gen/Amazonka/WellArchitected/Types/Answer.hs",
        "gen/Amazonka/WellArchitected/Types/AnswerReason.hs",
        "gen/Amazonka/WellArchitected/Types/AnswerSummary.hs",
        "gen/Amazonka/WellArchitected/Types/CheckDetail.hs",
        "gen/Amazonka/WellArchitected/Types/CheckFailureReason.hs",
        "gen/Amazonka/WellArchitected/Types/CheckProvider.hs",
        "gen/Amazonka/WellArchitected/Types/CheckStatus.hs",
        "gen/Amazonka/WellArchitected/Types/CheckSummary.hs",
        "gen/Amazonka/WellArchitected/Types/Choice.hs",
        "gen/Amazonka/WellArchitected/Types/ChoiceAnswer.hs",
        "gen/Amazonka/WellArchitected/Types/ChoiceAnswerSummary.hs",
        "gen/Amazonka/WellArchitected/Types/ChoiceContent.hs",
        "gen/Amazonka/WellArchitected/Types/ChoiceImprovementPlan.hs",
        "gen/Amazonka/WellArchitected/Types/ChoiceReason.hs",
        "gen/Amazonka/WellArchitected/Types/ChoiceStatus.hs",
        "gen/Amazonka/WellArchitected/Types/ChoiceUpdate.hs",
        "gen/Amazonka/WellArchitected/Types/DifferenceStatus.hs",
        "gen/Amazonka/WellArchitected/Types/ImportLensStatus.hs",
        "gen/Amazonka/WellArchitected/Types/ImprovementSummary.hs",
        "gen/Amazonka/WellArchitected/Types/Lens.hs",
        "gen/Amazonka/WellArchitected/Types/LensReview.hs",
        "gen/Amazonka/WellArchitected/Types/LensReviewReport.hs",
        "gen/Amazonka/WellArchitected/Types/LensReviewSummary.hs",
        "gen/Amazonka/WellArchitected/Types/LensShareSummary.hs",
        "gen/Amazonka/WellArchitected/Types/LensStatus.hs",
        "gen/Amazonka/WellArchitected/Types/LensStatusType.hs",
        "gen/Amazonka/WellArchitected/Types/LensSummary.hs",
        "gen/Amazonka/WellArchitected/Types/LensType.hs",
        "gen/Amazonka/WellArchitected/Types/LensUpgradeSummary.hs",
        "gen/Amazonka/WellArchitected/Types/Milestone.hs",
        "gen/Amazonka/WellArchitected/Types/MilestoneSummary.hs",
        "gen/Amazonka/WellArchitected/Types/NotificationSummary.hs",
        "gen/Amazonka/WellArchitected/Types/NotificationType.hs",
        "gen/Amazonka/WellArchitected/Types/OrganizationSharingStatus.hs",
        "gen/Amazonka/WellArchitected/Types/PermissionType.hs",
        "gen/Amazonka/WellArchitected/Types/PillarDifference.hs",
        "gen/Amazonka/WellArchitected/Types/PillarReviewSummary.hs",
        "gen/Amazonka/WellArchitected/Types/QuestionDifference.hs",
        "gen/Amazonka/WellArchitected/Types/Risk.hs",
        "gen/Amazonka/WellArchitected/Types/ShareInvitation.hs",
        "gen/Amazonka/WellArchitected/Types/ShareInvitationAction.hs",
        "gen/Amazonka/WellArchitected/Types/ShareInvitationSummary.hs",
        "gen/Amazonka/WellArchitected/Types/ShareResourceType.hs",
        "gen/Amazonka/WellArchitected/Types/ShareStatus.hs",
        "gen/Amazonka/WellArchitected/Types/TrustedAdvisorIntegrationStatus.hs",
        "gen/Amazonka/WellArchitected/Types/VersionDifferences.hs",
        "gen/Amazonka/WellArchitected/Types/Workload.hs",
        "gen/Amazonka/WellArchitected/Types/WorkloadDiscoveryConfig.hs",
        "gen/Amazonka/WellArchitected/Types/WorkloadEnvironment.hs",
        "gen/Amazonka/WellArchitected/Types/WorkloadImprovementStatus.hs",
        "gen/Amazonka/WellArchitected/Types/WorkloadShare.hs",
        "gen/Amazonka/WellArchitected/Types/WorkloadShareSummary.hs",
        "gen/Amazonka/WellArchitected/Types/WorkloadSummary.hs",
        "gen/Amazonka/WellArchitected/UntagResource.hs",
        "gen/Amazonka/WellArchitected/UpdateAnswer.hs",
        "gen/Amazonka/WellArchitected/UpdateGlobalSettings.hs",
        "gen/Amazonka/WellArchitected/UpdateLensReview.hs",
        "gen/Amazonka/WellArchitected/UpdateShareInvitation.hs",
        "gen/Amazonka/WellArchitected/UpdateWorkload.hs",
        "gen/Amazonka/WellArchitected/UpdateWorkloadShare.hs",
        "gen/Amazonka/WellArchitected/UpgradeLensReview.hs",
        "gen/Amazonka/WellArchitected/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_wellarchitected=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-wellarchitected/amazonka-wellarchitected.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-wellarchitected-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/WellArchitected.hs",
        "test/Test/Amazonka/WellArchitected.hs",
        "test/Test/Amazonka/WellArchitected/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_wellarchitected=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-wellarchitected",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
