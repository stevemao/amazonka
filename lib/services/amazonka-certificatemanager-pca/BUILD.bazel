load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-certificatemanager-pca/amazonka-certificatemanager-pca.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-certificatemanager-pca",
    srcs = [
        "gen/Amazonka/CertificateManagerPCA.hs",
        "gen/Amazonka/CertificateManagerPCA/CreateCertificateAuthority.hs",
        "gen/Amazonka/CertificateManagerPCA/CreateCertificateAuthorityAuditReport.hs",
        "gen/Amazonka/CertificateManagerPCA/CreatePermission.hs",
        "gen/Amazonka/CertificateManagerPCA/DeleteCertificateAuthority.hs",
        "gen/Amazonka/CertificateManagerPCA/DeletePermission.hs",
        "gen/Amazonka/CertificateManagerPCA/DeletePolicy.hs",
        "gen/Amazonka/CertificateManagerPCA/DescribeCertificateAuthority.hs",
        "gen/Amazonka/CertificateManagerPCA/DescribeCertificateAuthorityAuditReport.hs",
        "gen/Amazonka/CertificateManagerPCA/GetCertificate.hs",
        "gen/Amazonka/CertificateManagerPCA/GetCertificateAuthorityCertificate.hs",
        "gen/Amazonka/CertificateManagerPCA/GetCertificateAuthorityCsr.hs",
        "gen/Amazonka/CertificateManagerPCA/GetPolicy.hs",
        "gen/Amazonka/CertificateManagerPCA/ImportCertificateAuthorityCertificate.hs",
        "gen/Amazonka/CertificateManagerPCA/IssueCertificate.hs",
        "gen/Amazonka/CertificateManagerPCA/Lens.hs",
        "gen/Amazonka/CertificateManagerPCA/ListCertificateAuthorities.hs",
        "gen/Amazonka/CertificateManagerPCA/ListPermissions.hs",
        "gen/Amazonka/CertificateManagerPCA/ListTags.hs",
        "gen/Amazonka/CertificateManagerPCA/PutPolicy.hs",
        "gen/Amazonka/CertificateManagerPCA/RestoreCertificateAuthority.hs",
        "gen/Amazonka/CertificateManagerPCA/RevokeCertificate.hs",
        "gen/Amazonka/CertificateManagerPCA/TagCertificateAuthority.hs",
        "gen/Amazonka/CertificateManagerPCA/Types.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/ASN1Subject.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/AccessDescription.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/AccessMethod.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/AccessMethodType.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/ActionType.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/ApiPassthrough.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/AuditReportResponseFormat.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/AuditReportStatus.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/CertificateAuthority.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/CertificateAuthorityConfiguration.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/CertificateAuthorityStatus.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/CertificateAuthorityType.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/CertificateAuthorityUsageMode.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/CrlConfiguration.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/CsrExtensions.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/CustomAttribute.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/CustomExtension.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/EdiPartyName.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/ExtendedKeyUsage.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/ExtendedKeyUsageType.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/Extensions.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/FailureReason.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/GeneralName.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/KeyAlgorithm.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/KeyStorageSecurityStandard.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/KeyUsage.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/OcspConfiguration.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/OtherName.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/Permission.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/PolicyInformation.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/PolicyQualifierId.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/PolicyQualifierInfo.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/Qualifier.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/ResourceOwner.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/RevocationConfiguration.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/RevocationReason.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/S3ObjectAcl.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/SigningAlgorithm.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/Tag.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/Validity.hs",
        "gen/Amazonka/CertificateManagerPCA/Types/ValidityPeriodType.hs",
        "gen/Amazonka/CertificateManagerPCA/UntagCertificateAuthority.hs",
        "gen/Amazonka/CertificateManagerPCA/UpdateCertificateAuthority.hs",
        "gen/Amazonka/CertificateManagerPCA/Waiters.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_certificatemanager_pca=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
    ],
)

# rule generated from lib/services/amazonka-certificatemanager-pca/amazonka-certificatemanager-pca.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-certificatemanager-pca-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/CertificateManagerPCA.hs",
        "test/Test/Amazonka/CertificateManagerPCA/Internal.hs",
        "test/Test/Amazonka/Gen/CertificateManagerPCA.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_certificatemanager_pca=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-certificatemanager-pca",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
