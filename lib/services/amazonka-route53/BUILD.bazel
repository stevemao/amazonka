load("@rules_haskell//haskell:defs.bzl", "haskell_library", "haskell_test")

# rule generated from lib/services/amazonka-route53/amazonka-route53.cabal by gazelle_cabal
haskell_library(
    name = "amazonka-route53",
    srcs = [
        "gen/Amazonka/Route53.hs",
        "gen/Amazonka/Route53/ActivateKeySigningKey.hs",
        "gen/Amazonka/Route53/AssociateVPCWithHostedZone.hs",
        "gen/Amazonka/Route53/ChangeCidrCollection.hs",
        "gen/Amazonka/Route53/ChangeResourceRecordSets.hs",
        "gen/Amazonka/Route53/ChangeTagsForResource.hs",
        "gen/Amazonka/Route53/CreateCidrCollection.hs",
        "gen/Amazonka/Route53/CreateHealthCheck.hs",
        "gen/Amazonka/Route53/CreateHostedZone.hs",
        "gen/Amazonka/Route53/CreateKeySigningKey.hs",
        "gen/Amazonka/Route53/CreateQueryLoggingConfig.hs",
        "gen/Amazonka/Route53/CreateReusableDelegationSet.hs",
        "gen/Amazonka/Route53/CreateTrafficPolicy.hs",
        "gen/Amazonka/Route53/CreateTrafficPolicyInstance.hs",
        "gen/Amazonka/Route53/CreateTrafficPolicyVersion.hs",
        "gen/Amazonka/Route53/CreateVPCAssociationAuthorization.hs",
        "gen/Amazonka/Route53/DeactivateKeySigningKey.hs",
        "gen/Amazonka/Route53/DeleteCidrCollection.hs",
        "gen/Amazonka/Route53/DeleteHealthCheck.hs",
        "gen/Amazonka/Route53/DeleteHostedZone.hs",
        "gen/Amazonka/Route53/DeleteKeySigningKey.hs",
        "gen/Amazonka/Route53/DeleteQueryLoggingConfig.hs",
        "gen/Amazonka/Route53/DeleteReusableDelegationSet.hs",
        "gen/Amazonka/Route53/DeleteTrafficPolicy.hs",
        "gen/Amazonka/Route53/DeleteTrafficPolicyInstance.hs",
        "gen/Amazonka/Route53/DeleteVPCAssociationAuthorization.hs",
        "gen/Amazonka/Route53/DisableHostedZoneDNSSEC.hs",
        "gen/Amazonka/Route53/DisassociateVPCFromHostedZone.hs",
        "gen/Amazonka/Route53/EnableHostedZoneDNSSEC.hs",
        "gen/Amazonka/Route53/GetAccountLimit.hs",
        "gen/Amazonka/Route53/GetChange.hs",
        "gen/Amazonka/Route53/GetCheckerIpRanges.hs",
        "gen/Amazonka/Route53/GetDNSSEC.hs",
        "gen/Amazonka/Route53/GetGeoLocation.hs",
        "gen/Amazonka/Route53/GetHealthCheck.hs",
        "gen/Amazonka/Route53/GetHealthCheckCount.hs",
        "gen/Amazonka/Route53/GetHealthCheckLastFailureReason.hs",
        "gen/Amazonka/Route53/GetHealthCheckStatus.hs",
        "gen/Amazonka/Route53/GetHostedZone.hs",
        "gen/Amazonka/Route53/GetHostedZoneCount.hs",
        "gen/Amazonka/Route53/GetHostedZoneLimit.hs",
        "gen/Amazonka/Route53/GetQueryLoggingConfig.hs",
        "gen/Amazonka/Route53/GetReusableDelegationSet.hs",
        "gen/Amazonka/Route53/GetReusableDelegationSetLimit.hs",
        "gen/Amazonka/Route53/GetTrafficPolicy.hs",
        "gen/Amazonka/Route53/GetTrafficPolicyInstance.hs",
        "gen/Amazonka/Route53/GetTrafficPolicyInstanceCount.hs",
        "gen/Amazonka/Route53/Lens.hs",
        "gen/Amazonka/Route53/ListCidrBlocks.hs",
        "gen/Amazonka/Route53/ListCidrCollections.hs",
        "gen/Amazonka/Route53/ListCidrLocations.hs",
        "gen/Amazonka/Route53/ListGeoLocations.hs",
        "gen/Amazonka/Route53/ListHealthChecks.hs",
        "gen/Amazonka/Route53/ListHostedZones.hs",
        "gen/Amazonka/Route53/ListHostedZonesByName.hs",
        "gen/Amazonka/Route53/ListHostedZonesByVPC.hs",
        "gen/Amazonka/Route53/ListQueryLoggingConfigs.hs",
        "gen/Amazonka/Route53/ListResourceRecordSets.hs",
        "gen/Amazonka/Route53/ListReusableDelegationSets.hs",
        "gen/Amazonka/Route53/ListTagsForResource.hs",
        "gen/Amazonka/Route53/ListTagsForResources.hs",
        "gen/Amazonka/Route53/ListTrafficPolicies.hs",
        "gen/Amazonka/Route53/ListTrafficPolicyInstances.hs",
        "gen/Amazonka/Route53/ListTrafficPolicyInstancesByHostedZone.hs",
        "gen/Amazonka/Route53/ListTrafficPolicyInstancesByPolicy.hs",
        "gen/Amazonka/Route53/ListTrafficPolicyVersions.hs",
        "gen/Amazonka/Route53/ListVPCAssociationAuthorizations.hs",
        "gen/Amazonka/Route53/TestDNSAnswer.hs",
        "gen/Amazonka/Route53/Types.hs",
        "gen/Amazonka/Route53/Types/AccountLimit.hs",
        "gen/Amazonka/Route53/Types/AccountLimitType.hs",
        "gen/Amazonka/Route53/Types/AlarmIdentifier.hs",
        "gen/Amazonka/Route53/Types/AliasTarget.hs",
        "gen/Amazonka/Route53/Types/Change.hs",
        "gen/Amazonka/Route53/Types/ChangeAction.hs",
        "gen/Amazonka/Route53/Types/ChangeBatch.hs",
        "gen/Amazonka/Route53/Types/ChangeInfo.hs",
        "gen/Amazonka/Route53/Types/ChangeStatus.hs",
        "gen/Amazonka/Route53/Types/CidrBlockSummary.hs",
        "gen/Amazonka/Route53/Types/CidrCollection.hs",
        "gen/Amazonka/Route53/Types/CidrCollectionChange.hs",
        "gen/Amazonka/Route53/Types/CidrCollectionChangeAction.hs",
        "gen/Amazonka/Route53/Types/CidrRoutingConfig.hs",
        "gen/Amazonka/Route53/Types/CloudWatchAlarmConfiguration.hs",
        "gen/Amazonka/Route53/Types/CloudWatchRegion.hs",
        "gen/Amazonka/Route53/Types/CollectionSummary.hs",
        "gen/Amazonka/Route53/Types/ComparisonOperator.hs",
        "gen/Amazonka/Route53/Types/DNSSECStatus.hs",
        "gen/Amazonka/Route53/Types/DelegationSet.hs",
        "gen/Amazonka/Route53/Types/Dimension.hs",
        "gen/Amazonka/Route53/Types/GeoLocation.hs",
        "gen/Amazonka/Route53/Types/GeoLocationDetails.hs",
        "gen/Amazonka/Route53/Types/HealthCheck.hs",
        "gen/Amazonka/Route53/Types/HealthCheckConfig.hs",
        "gen/Amazonka/Route53/Types/HealthCheckObservation.hs",
        "gen/Amazonka/Route53/Types/HealthCheckRegion.hs",
        "gen/Amazonka/Route53/Types/HealthCheckType.hs",
        "gen/Amazonka/Route53/Types/HostedZone.hs",
        "gen/Amazonka/Route53/Types/HostedZoneConfig.hs",
        "gen/Amazonka/Route53/Types/HostedZoneLimit.hs",
        "gen/Amazonka/Route53/Types/HostedZoneLimitType.hs",
        "gen/Amazonka/Route53/Types/HostedZoneOwner.hs",
        "gen/Amazonka/Route53/Types/HostedZoneSummary.hs",
        "gen/Amazonka/Route53/Types/InsufficientDataHealthStatus.hs",
        "gen/Amazonka/Route53/Types/KeySigningKey.hs",
        "gen/Amazonka/Route53/Types/LinkedService.hs",
        "gen/Amazonka/Route53/Types/LocationSummary.hs",
        "gen/Amazonka/Route53/Types/QueryLoggingConfig.hs",
        "gen/Amazonka/Route53/Types/RRType.hs",
        "gen/Amazonka/Route53/Types/ResettableElementName.hs",
        "gen/Amazonka/Route53/Types/ResourceRecord.hs",
        "gen/Amazonka/Route53/Types/ResourceRecordSet.hs",
        "gen/Amazonka/Route53/Types/ResourceRecordSetFailover.hs",
        "gen/Amazonka/Route53/Types/ResourceTagSet.hs",
        "gen/Amazonka/Route53/Types/ReusableDelegationSetLimit.hs",
        "gen/Amazonka/Route53/Types/ReusableDelegationSetLimitType.hs",
        "gen/Amazonka/Route53/Types/Statistic.hs",
        "gen/Amazonka/Route53/Types/StatusReport.hs",
        "gen/Amazonka/Route53/Types/Tag.hs",
        "gen/Amazonka/Route53/Types/TagResourceType.hs",
        "gen/Amazonka/Route53/Types/TrafficPolicy.hs",
        "gen/Amazonka/Route53/Types/TrafficPolicyInstance.hs",
        "gen/Amazonka/Route53/Types/TrafficPolicySummary.hs",
        "gen/Amazonka/Route53/Types/VPC.hs",
        "gen/Amazonka/Route53/Types/VPCRegion.hs",
        "gen/Amazonka/Route53/UpdateHealthCheck.hs",
        "gen/Amazonka/Route53/UpdateHostedZoneComment.hs",
        "gen/Amazonka/Route53/UpdateTrafficPolicyComment.hs",
        "gen/Amazonka/Route53/UpdateTrafficPolicyInstance.hs",
        "gen/Amazonka/Route53/Waiters.hs",
        "src/Amazonka/Route53/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_route53=\"2.0\"",
        "-Wall",
        "-fwarn-incomplete-uni-patterns",
        "-fwarn-incomplete-record-updates",
        "-funbox-strict-fields",
    ],
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/amazonka-core",
        "@stackage//:base",
        "@stackage//:text",
    ],
)

# rule generated from lib/services/amazonka-route53/amazonka-route53.cabal by gazelle_cabal
haskell_test(
    name = "amazonka-route53-test",
    srcs = [
        "test/Main.hs",
        "test/Test/Amazonka/Gen/Route53.hs",
        "test/Test/Amazonka/Route53.hs",
        "test/Test/Amazonka/Route53/Internal.hs",
    ],
    ghcopts = [
        "-DVERSION_amazonka_route53=\"2.0\"",
        "-Wall",
        "-threaded",
    ],
    main_file = "test/Main.hs",
    version = "2.0",
    visibility = ["//visibility:public"],
    deps = [
        ":amazonka-route53",
        "//lib/amazonka-core",
        "//lib/amazonka-test",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:case-insensitive",
        "@stackage//:tasty",
        "@stackage//:tasty-hunit",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:unordered-containers",
    ],
)
